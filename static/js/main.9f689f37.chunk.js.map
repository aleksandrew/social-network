{"version":3,"sources":["components/avatar/avatar.module.scss","pages/profile/profileIntro/profileIntro.module.scss","pages/login/login.module.scss","images/content/thumb_broken.png","images/icon/user.svg","components/preloader/preloader.module.scss","images/icon/cover.jpg","pages/message/Message.module.scss","pages/profile/profileHeader/profileHeader.module.scss","pages/users/Users.module.scss","pages/profile/profilePost/post/post.module.scss","serviceWorker.js","services/api.js","constans/types.js","sagas/app.js","sagas/auth.js","sagas/users.js","sagas/profile.js","sagas/index.js","redusers/app-reducer.js","redusers/auth-reducer.js","redusers/users-reducer.js","components/time.js","redusers/profile-reducer.js","redusers/message-reducer.js","redusers/store.js","common/footer/index.js","common/error/index.js","components/input/index.js","components/checkbox/index.js","pages/login/LoginForm.js","components/avatar/index.js","pages/login/Modals.js","pages/login/index.js","components/preloader/Preloader.js","components/pagination/index.js","pages/users/Users.js","pages/users/UsersContainer.js","common/header/Header.js","common/header/HeaderContainer.js","pages/profile/profilePost/post/index.js","pages/profile/profilePost/ProfilePostForm.js","pages/profile/profilePost/index.js","components/repalcer/index.js","pages/profile/profileIntro/index.js","pages/profile/profileHeader/index.js","pages/profile/Profile.js","pages/profile/ProfileContainer.js","pages/setting/General.js","pages/setting/Contacts.js","pages/setting/Setting.js","pages/setting/SettingContainer.js","pages/message/Dialog.js","pages/message/Message.js","pages/message/MessageContainer.js","App.js","index.js","pages/profile/profilePost/profilePost.module.scss","common/error/error.module.scss","pages/setting/setting.module.scss","common/footer/footer.module.scss","components/pagination/pagination.module.scss","components/checkbox/checkbox.module.scss","pages/profile/profile.module.scss","common/header/header.module.scss"],"names":["module","exports","Boolean","window","location","hostname","match","instance","axios","create","baseURL","withCredentials","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","followUsers","userId","post","unfollowUsers","delete","profileAPI","viewProfile","getStatus","upadateStatus","status","put","updateProfileData","profileData","updateImage","photo","formData","FormData","append","authAPI","me","login","email","password","rememberMe","logout","APP","INITIALIZED_APP","SET_ERROR_MESSAGES","INITIALIZED_SUCCESS","AUTH","LOGIN","LOGOUT","SET_LOGOUT","SET_USER_DATA","GET_AUTH_USER_DATA","USERS","FOLLOW","UNFOLLOW","SET_USERS","ALL_USERS","USER_REMOVE","REQUEST_USERS","SET_ALL_USERS","FOLLOW_SUCCESS","UNFOLLOW_SUCCESS","SET_CURRENT_PAGE","SET_FOLLOWED_USERS","TOGGLE_IS_FETCHING","SET_TOTAL_USERS_COUNT","TOGGLE_FOLLOWING_PROGRESS","PROFILE","USER_ID","ADD_POST","SET_LIKE","GET_STATUS","SET_STATUS","SAVE_PHOTO","REMOVE_POST","UPDATE_DATA","UPDATE_STATUS","SET_USER_PROFILE","SET_PHOTO_SUCCESS","MESSAGE","initializeApp","call","getAuthUserDataRequest","payload","type","isAuth","console","log","a","resultCode","takeEvery","getAuthUserData","messages","loginRequest","request","logoutRequest","localStorage","removeItem","follow","unfollow","requestUsers","setAllUsers","isFetching","followUsersRequest","unfollowUsersRequest","getUsersRequest","users","items","count","totalCount","b","i","reviewUser","reviewStatus","updateStatus","savePhoto","updateData","profile","getStatusRequest","updateStatusRequest","file","updateImageRequest","website","facebook","vk","twitter","github","youtobe","instagram","mainLink","primeryProfile","JSON","parse","getItem","contacts","updateDataRequest","id","photos","obj","sagasRoot","fork","app","auth","initialState","initialized","errorMessages","selector","state","appReducer","action","test","name","authReducer","allUsers","followedUsers","totalUsersCount","followingInProgress","usersReducer","_","map","user","followed","setFollowedUsers","filter","currentDate","getDate","prevDate","date","this","_setPrevDate","formatterDate","Intl","DateTimeFormat","format","getTime","currentTime","Date","hour","minute","d","setDate","postData","like","youselfLike","time","profileReducer","newPost","length","newPostBody","idPost","setItem","stringify","acquaintancesUser","sendMessage","read","message","img","href","messageReducer","markRead","dialog","newMessage","reducers","combineReducers","form","formReducer","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","run","Error","memo","cx","classNames","bind","styles","className","bottomBlock","bottomDesc","props","history","useEffect","document","title","prevPage","useCallback","goBack","error","errorContainer","errorDesc","errorImage","src","thumb","alt","Nav","NavItem","errorItem","NavLink","onClick","target","Input","classNameLabel","classNameInput","classNameContainer","input","label","disabled","meta","touched","hasError","FormGroup","style","position","inputContainerDefault","Label","htmlFor","defaultLabel","errorTextarea","onChange","e","errorBlockLitle","defaultProps","attr","Checkbox","formGroup","check","event","checked","value","defaultInput","descr","LoginForm","handleSubmit","submitting","modal","checkbox","emailStyle","formLine","onSubmit","Field","placeholder","component","formInput","formInputModal","checkboxLabel","formSummuryError","formBtn","formBtnModal","connect","initialValues","authSelector","appSelector","dispatch","reduxForm","enableReinitialize","validate","values","errors","Avatar","width","height","borderRadius","imgBorderRadius","ModalAccount","React","showModal","setShowModal","isOpen","ariaHideApp","onRequestClose","overlayClassName","overlay","modal__account","contentLabel","avatar","modalTitle","modalTitle__account","modalClose","modalLink","Login","useSelector","useState","showModalAccount","setShowModalAccount","to","topBlock","loginBlock","loginBlockDisable","logo","desc","list","item","itemBlock","itemBlockDesc","blockForm","logBtn","Preloader","preloader","xmlns","viewBox","transform","cy","r","fill","fillOpacity","attributeName","begin","keyTimes","dur","repeatCount","Pagination","paginator","onPageChanged","pages","pagesCount","Math","ceil","push","slice","selectedPage","page","key","Users","userRemove","PossibleAcquaintances","Header","HeaderTitle","List","Item","Info","Photos","small","Title","Username","Status","Keyboard","Button","Unfollow","some","Follow","Remove","UsersContainer","pageNumber","scrollTo","PureComponent","compose","setCurrentPage","collapsed","setCollapsed","customAlert","setCustomAlert","toggleNavbar","isLogout","headerContainer","Navbar","header","headerAlert","headerAlertCollapsed","NavbarBrand","logoWrapper","logoIcon","nav","search","searchField","searchButton","link","linkProfile","linkProfileText","NavbarToggler","menu","menuActive","Collapse","hiddenMenu","navbar","linkHiddenMenu","linkHiddenMenuLast","HeaderContainer","setState","Post","likeStatus","fullName","removePost","setLike","onRemovePost","onLike","FieldPostDescLike","Block","FieldPost","FieldPostKeyboard","FieldPostLeft","FieldPostAvaBorder","FieldPostData","FieldPostNameAuthor","FieldPostDateCreated","FieldPostRemove","FieldPostDesc","FieldPostDescUnderline","FieldPostInfo","FieldPostInfoLike","FieldPostInfoLikeTrue","FieldPostInfoLikeFalse","FieldPostInfoHandLike","FieldPostInfoHandLikeTrue","FieldPostInfoHandLikeFalse","ProfilePostForm","pristine","FieldCreatedPost","FieldCreatedPostForm","FieldCreatedPostAvaBorder","resize","minHeight","FieldCreatedPostTextarea","FieldCreatedPostContainer","ButtonValidate","ProfilePost","useDispatch","addPost","addNewPost","Posts","str","replace","ProfileIntro","aboutMe","lookingForAJob","lookingForAJobDescription","youtube","Intro","IntroDesc","IntroDescTitle","IntroDescInfo","IntroDescIsWork","IntroDescWork","find","Object","keys","contactList","contactItem","replacer","contactLink","IntroDescGh","IntroDescWeb","IntroDescLink","IntroDescFb","IntroDescVk","IntroDescInst","IntroDescTw","IntroDescYb","ProfileHeader","isOwner","editMode","setEditMode","mouseOver","setMouseOver","changedStatus","setChangeStatus","activateEditMode","onStatusChange","currentTarget","deactivateEditMode","onMainPhotoSelected","files","InfoTop","Cover","CoverChange","CoverChangeInput","CoverChangeLabel","large","cover","InfoDesc","InfoCircleChangeInput","InfoCircleChangeLabel","InfoCircle","Desc","DescFullName","DescStatus","DescStatusWidth","onMouseEnter","onMouseLeave","onDoubleClick","autoFocus","onBlur","StatusEditField","DescStatusEdit","InfoBottom","Profile","Main","Bottom","ProfileContainer","params","authorizedUserId","refreshProfile","prevProps","prevState","profileSelector","General","formContacts","fieldContainer","formJob","labelCheckbox","button","Contacts","Setting","isActive","path","pathname","setting","settingWrapper","navbarActive","navbarLink","settingBlock","exact","from","SettingContainer","Dialog","isMarkRead","todaysDate","isRead","preventDefault","messageItem","messageItemUnread","messageLink","messageImg","messageDesc","messageInfo","messageInfoTitle","messageInfoText","messageInfoTextReceived","messageDate","messageMark","messageMarkUnread","Message","messageBlock","elem","elemTop","messageKeyboard","messageKeyboardRight","active","messageKeyboardLeft","messageList","MessageContainer","messageSelector","getIsFetching","usersSelector","getFollowedUsers","withRouter","App","catchAllUnhandledErrors","promiseRejectionEvent","addEventListener","removeEventListener","LoginPage","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9f689f37.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"img\":\"avatar_img__yJPZ5\",\"imgBorderRadius\":\"avatar_imgBorderRadius__b2t9s\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Block\":\"profileIntro_Block__30xkD\",\"Intro\":\"profileIntro_Intro__3k45j\",\"IntroDesc\":\"profileIntro_IntroDesc__1v2Ou\",\"IntroDescTitle\":\"profileIntro_IntroDescTitle__3iWW-\",\"IntroDescInfo\":\"profileIntro_IntroDescInfo__wpqoj\",\"IntroDescIsWork\":\"profileIntro_IntroDescIsWork__2DKd-\",\"IntroDescWork\":\"profileIntro_IntroDescWork__2X-JU\",\"IntroDescFb\":\"profileIntro_IntroDescFb__29qzd\",\"IntroDescTw\":\"profileIntro_IntroDescTw__2TOwn\",\"IntroDescGh\":\"profileIntro_IntroDescGh__3qnCP\",\"IntroDescInst\":\"profileIntro_IntroDescInst__2VqsB\",\"IntroDescLink\":\"profileIntro_IntroDescLink__3oIg0\",\"IntroDescVk\":\"profileIntro_IntroDescVk__3gLEM\",\"IntroDescWeb\":\"profileIntro_IntroDescWeb__3JOwn\",\"IntroDescYb\":\"profileIntro_IntroDescYb__24oOP\",\"contactList\":\"profileIntro_contactList__1tr6f\",\"contactItem\":\"profileIntro_contactItem__2AzOb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formSummuryError\":\"login_formSummuryError__2cJqK\",\"topBlock\":\"login_topBlock__3mW_B\",\"loginBlock\":\"login_loginBlock__2-Zxz\",\"loginBlockDisable\":\"login_loginBlockDisable__y3ylt\",\"logo\":\"login_logo__JSwCt\",\"title\":\"login_title__25SxW\",\"desc\":\"login_desc__gviJ7\",\"list\":\"login_list__OJqzw\",\"item\":\"login_item__3rS-R\",\"itemBlock\":\"login_itemBlock__1CY0W\",\"itemBlockDesc\":\"login_itemBlockDesc__1IfDm\",\"itemBlock__add\":\"login_itemBlock__add__2Q9xT\",\"itemAddBlock\":\"login_itemAddBlock__3VRUA\",\"item__add\":\"login_item__add__7npMR\",\"blockForm\":\"login_blockForm__12t-N\",\"formInput\":\"login_formInput__7pOR7\",\"formInputModal\":\"login_formInputModal__1dVNu\",\"checkbox\":\"login_checkbox__P8ZB8\",\"checkboxLabel\":\"login_checkboxLabel__3A3Tc\",\"formBtn\":\"login_formBtn__3YIw_\",\"formBtnModal\":\"login_formBtnModal__W-HFN\",\"formLine\":\"login_formLine__3WHAW\",\"logBtn\":\"login_logBtn__213SY\",\"overlay\":\"login_overlay__2Dom-\",\"modal\":\"login_modal__2gK0a\",\"modal__account\":\"login_modal__account__3U3iD\",\"modalTitle\":\"login_modalTitle__3Js9Y\",\"modalTitle__account\":\"login_modalTitle__account__2o9K8\",\"modalClose\":\"login_modalClose__wiPVz\",\"modalLink\":\"login_modalLink__208vQ\",\"avatar\":\"login_avatar__1UzwV\"};","module.exports = __webpack_public_path__ + \"static/media/thumb_broken.536ed831.png\";","module.exports = __webpack_public_path__ + \"static/media/user.e397e8d2.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"preloader_preloader__2xLgR\"};","module.exports = __webpack_public_path__ + \"static/media/cover.62f8548a.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__2jqLP\",\"messageBlock\":\"Message_messageBlock__3iVnK\",\"elem\":\"Message_elem__g0xnW\",\"elemTop\":\"Message_elemTop__2-lLI\",\"messageKeyboardRight\":\"Message_messageKeyboardRight__3mOLu\",\"messageKeyboardLeft\":\"Message_messageKeyboardLeft__19DoT\",\"messageList\":\"Message_messageList__2IBtJ\",\"messageItem\":\"Message_messageItem__MNXTj\",\"messageItemUnread\":\"Message_messageItemUnread__S4rHV\",\"messageLink\":\"Message_messageLink__2Xg0k\",\"messageImg\":\"Message_messageImg__19iTJ\",\"messageDesc\":\"Message_messageDesc__2uHU1\",\"messageInfo\":\"Message_messageInfo__22ZI4\",\"messageInfoTitle\":\"Message_messageInfoTitle__1LBcg\",\"messageInfoText\":\"Message_messageInfoText__2ey98\",\"messageInfoTextReceived\":\"Message_messageInfoTextReceived__3viPo\",\"messageDate\":\"Message_messageDate__K0Sp7\",\"messageMark\":\"Message_messageMark__1BssN\",\"messageMarkUnread\":\"Message_messageMarkUnread__1OxkZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Block\":\"profileHeader_Block__3qA1u\",\"Info\":\"profileHeader_Info__3ygvZ\",\"InfoTop\":\"profileHeader_InfoTop__3tOBp\",\"Cover\":\"profileHeader_Cover__dfUPO\",\"CoverChange\":\"profileHeader_CoverChange__3vupn\",\"CoverChangeInput\":\"profileHeader_CoverChangeInput__3wSFT\",\"CoverChangeLabel\":\"profileHeader_CoverChangeLabel__95TJp\",\"InfoDesc\":\"profileHeader_InfoDesc__2w97Q\",\"InfoCircle\":\"profileHeader_InfoCircle__-ZyHb\",\"InfoCircleChangeInput\":\"profileHeader_InfoCircleChangeInput__2wYuK\",\"InfoCircleChangeLabel\":\"profileHeader_InfoCircleChangeLabel__EyQ7w\",\"Desc\":\"profileHeader_Desc__371lN\",\"DescFullName\":\"profileHeader_DescFullName__3M_8B\",\"DescStatus\":\"profileHeader_DescStatus__1kq5j\",\"DescStatusWidth\":\"profileHeader_DescStatusWidth__1LLxd\",\"DescStatusEdit\":\"profileHeader_DescStatusEdit__3LOrR\",\"StatusEditField\":\"profileHeader_StatusEditField__-Do0A\",\"InfoBottom\":\"profileHeader_InfoBottom__9CGfD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Users\":\"Users_Users__1oUSH\",\"userPhoto\":\"Users_userPhoto__BhDfA\",\"PossibleAcquaintances\":\"Users_PossibleAcquaintances__jcpEX\",\"Header\":\"Users_Header__1JjnZ\",\"HeaderTitle\":\"Users_HeaderTitle__1sFK4\",\"List\":\"Users_List__2lXwW\",\"Item\":\"Users_Item__1eXjE\",\"Info\":\"Users_Info__1lcu0\",\"Photos\":\"Users_Photos__3lOny\",\"Img\":\"Users_Img__2wJ_7\",\"Title\":\"Users_Title__s5MW2\",\"Username\":\"Users_Username__23IDr\",\"Status\":\"Users_Status__3Wb2_\",\"Keyboard\":\"Users_Keyboard__1yt_4\",\"Button\":\"Users_Button__2GyA_\",\"Follow\":\"Users_Follow__2gaUO\",\"Remove\":\"Users_Remove__3qept\",\"Unfollow\":\"Users_Unfollow__30JAO\",\"selectedPages\":\"Users_selectedPages__2QKTN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Block\":\"post_Block__1B9XQ\",\"Posts\":\"post_Posts__gWIu4\",\"FieldCreatedPost\":\"post_FieldCreatedPost__1sxEN\",\"FieldCreatedPostForm\":\"post_FieldCreatedPostForm__22KXz\",\"FieldCreatedPostAvaBorder\":\"post_FieldCreatedPostAvaBorder__258lc\",\"FieldCreatedPostTextarea\":\"post_FieldCreatedPostTextarea__al3nG\",\"FieldCreatedPostContainer\":\"post_FieldCreatedPostContainer__2RJ1q\",\"Button\":\"post_Button__1laaz\",\"ButtonValidate\":\"post_ButtonValidate__24nRE\",\"FieldPost\":\"post_FieldPost__2373e\",\"FieldPostKeyboard\":\"post_FieldPostKeyboard__2i-Ig\",\"FieldPostLeft\":\"post_FieldPostLeft__MWs5o\",\"FieldPostAvaBorder\":\"post_FieldPostAvaBorder__3enM-\",\"FieldPostData\":\"post_FieldPostData__3rSxI\",\"FieldPostNameAuthor\":\"post_FieldPostNameAuthor__3nM71\",\"FieldPostDateCreated\":\"post_FieldPostDateCreated__1vE9S\",\"FieldPostRemove\":\"post_FieldPostRemove__3tAdC\",\"FieldPostDesc\":\"post_FieldPostDesc__1DdmB\",\"FieldPostDescUnderline\":\"post_FieldPostDescUnderline__3cVTg\",\"FieldPostDescLike\":\"post_FieldPostDescLike__2k4pU\",\"FieldPostInfo\":\"post_FieldPostInfo__2IWMI\",\"FieldPostInfoLike\":\"post_FieldPostInfoLike__3YRzb\",\"FieldPostInfoLikeFalse\":\"post_FieldPostInfoLikeFalse__OvISW\",\"FieldPostInfoLikeTrue\":\"post_FieldPostInfoLikeTrue__13rI4\",\"FieldPostInfoHandLike\":\"post_FieldPostInfoHandLike__1i071\",\"FieldPostInfoHandLikeFalse\":\"post_FieldPostInfoHandLikeFalse__2cMiI\",\"FieldPostInfoHandLikeTrue\":\"post_FieldPostInfoHandLikeTrue__1jQCU\",\"hand\":\"post_hand__2FUEx\"};","// This optional code is used to register a services worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    || window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register (config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our services worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a services worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // services worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a services '\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\n                    );\n                });\n            } else {\n                // Is not localhost. Just register services worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW (swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then((registration) => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous services worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch((error) => {\n            console.error('Error during services worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker (swUrl, config) {\n    // Check if the services worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then((response) => {\n            // Ensure services worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404\n        || (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No services worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then((registration) => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.',\n            );\n        });\n}\n\nexport function unregister () {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then((registration) => {\n            registration.unregister();\n        });\n    }\n}\n","import axios from 'axios';\n\nconst instance = axios.create({\n    baseURL: 'https://social-network.samuraijs.com/api/1.0',\n    withCredentials: true,\n    headers: {\n        'API-KEY': '1e4bcdeb-f68f-408c-8617-5b5dadbf0d0f',\n    },\n});\n\nexport const usersAPI = {\n    getUsers (currentPage = 1, pageSize = 10) {\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\n            .then((response) => {\n                return response.data;\n            });\n    },\n    followUsers (userId = 5197) {\n        return instance.post(`follow/${userId}`)\n            .then((response) => {\n                return response.data;\n            });\n    },\n    unfollowUsers (userId = 5197) {\n        return instance.delete(`follow/${userId}`)\n            .then((response) => {\n                return response.data;\n            });\n    },\n};\n\nexport const profileAPI = {\n    viewProfile (userId = 5197) {\n        return instance.get(`profile/${userId}`)\n            .then((response) => {\n                return response;\n            });\n    },\n    getStatus (userId = 5197) {\n        return instance.get(`profile/status/${userId}`);\n    },\n    upadateStatus (status) {\n        return instance.put('profile/status', { status });\n    },\n    updateProfileData (profileData) {\n        return instance.put('profile', profileData);\n    },\n    updateImage (photo) {\n        const formData = new FormData();\n        formData.append('image', photo);\n\n        return instance.put('profile/photo', formData, {\n            headers: {\n                'Content-Type': 'multipart/form-data',\n            },\n        });\n    },\n};\n\nexport const authAPI = {\n    me () {\n        return instance.get('auth/me');\n    },\n    login (email, password, rememberMe = false) {\n        return instance.post('auth/login', {\n            email,\n            password,\n            rememberMe,\n        });\n    },\n    logout () {\n        return instance.delete('auth/login');\n    },\n};\n","export const APP = {\n    INITIALIZED_APP: 'INITIALIZED_APP',\n    SET_ERROR_MESSAGES: 'SET_ERROR_MESSAGES',\n    INITIALIZED_SUCCESS: 'INITIALIZED_SUCCESS',\n};\n\nexport const AUTH = {\n    LOGIN: 'LOGIN',\n    LOGOUT: 'LOGOUT',\n    SET_LOGOUT: 'SET_LOGOUT',\n    SET_USER_DATA: 'SET_USER_DATA',\n    GET_AUTH_USER_DATA: 'GET_AUTH_USER_DATA',\n};\n\nexport const USERS = {\n    FOLLOW: 'FOLLOW',\n    UNFOLLOW: 'UNFOLLOW',\n    SET_USERS: 'SET_USERS',\n    ALL_USERS: 'ALL_USERS',\n    USER_REMOVE: 'USER_REMOVE',\n    REQUEST_USERS: 'REQUEST_USERS',\n    SET_ALL_USERS: 'SET_ALL_USERS',\n    FOLLOW_SUCCESS: 'FOLLOW_SUCCESS',\n    UNFOLLOW_SUCCESS: 'UNFOLLOW_SUCCESS',\n    SET_CURRENT_PAGE: 'SET_CURRENT_PAGE',\n    SET_FOLLOWED_USERS: 'SET_FOLLOWED_USERS',\n    TOGGLE_IS_FETCHING: 'TOGGLE_IS_FETCHING',\n    SET_TOTAL_USERS_COUNT: 'SET_TOTAL_USERS_COUNT',\n    TOGGLE_FOLLOWING_PROGRESS: 'TOGGLE_FOLLOWING_PROGRESS',\n};\n\nexport const PROFILE = {\n    USER_ID: 'USER_ID',\n    ADD_POST: 'ADD_POST',\n    SET_LIKE: 'SET_LIKE',\n    GET_STATUS: 'GET_STATUS',\n    SET_STATUS: 'SET_STATUS',\n    SAVE_PHOTO: 'SAVE_PHOTO',\n    REMOVE_POST: 'REMOVE_POST',\n    UPDATE_DATA: 'UPDATE_DATA',\n    UPDATE_STATUS: 'UPDATE_STATUS',\n    SET_USER_PROFILE: 'SET_USER_PROFILE',\n    SET_PHOTO_SUCCESS: 'SET_PHOTO_SUCCESS',\n};\n\nexport const MESSAGE = {\n    SET_MARK: 'SET_MARK',\n};\n","// outsource dependencies\nimport { takeEvery, put, call } from 'redux-saga/effects';\n\n// local dependencies\nimport { authAPI } from '../services/api';\nimport { APP, AUTH } from '../constans/types';\n\nfunction * initializeApp () {\n    try {\n        const payload = yield call(getAuthUserDataRequest);\n\n        yield put({ type: APP.INITIALIZED_SUCCESS });\n\n        if (payload) {\n            yield put({ type: AUTH.SET_USER_DATA, payload: { ...payload, isAuth: true } });\n        }\n    } catch (e) {\n        console.log(e);\n    }\n}\n\nasync function getAuthUserDataRequest () {\n    const response = await authAPI.me();\n    if (response.data.resultCode === 0) {\n        return response.data.data;\n    }\n}\n\nexport default function * () {\n    yield takeEvery(APP.INITIALIZED_APP, initializeApp);\n}\n","// outsource dependencies\nimport { takeEvery, put, call } from 'redux-saga/effects';\n\n// local dependencies\nimport { authAPI } from '../services/api';\nimport { APP, AUTH } from '../constans/types';\n\n\nfunction * getAuthUserData () {\n    try {\n        const payload = yield call(getAuthUserDataRequest);\n\n        if (payload) {\n            yield put({ type: APP.SET_ERROR_MESSAGES, messages: null });\n            yield put({ type: AUTH.SET_USER_DATA, payload: { ...payload, isAuth: true } });\n        } else {\n            // yield put({type: APP.SET_ERROR_MESSAGES, messages: request.data.messages[0]});\n        }\n    } catch (e) {\n        console.log(e);\n    }\n}\n\nfunction * login ({ type, ...payload }) {\n    try {\n        const request = yield call(loginRequest, payload);\n        if (!request.data.resultCode) {\n            yield call(getAuthUserData);\n            yield put({ type: APP.SET_ERROR_MESSAGES, messages: null });\n        } else {\n            yield put({ type: APP.SET_ERROR_MESSAGES, messages: request.data.messages[0] });\n        }\n    } catch (e) {\n        console.log(e);\n    }\n}\n\nfunction * logout () {\n    try {\n        const response = yield call(logoutRequest);\n\n        if (response.data.resultCode === 0) {\n            localStorage.removeItem('primeryProfile');\n            yield put({ type: AUTH.SET_LOGOUT });\n        }\n    } catch (e) {\n        console.log(e);\n    }\n}\n\nasync function getAuthUserDataRequest () {\n    const response = await authAPI.me();\n\n    if (!response.data.resultCode) {\n        return await response.data.data;\n    }\n\n    console.log(response.data.messages[0]);\n    return await response.data.messages[0];\n}\n\nasync function loginRequest (payload) {\n    const { email, password, rememberMe } = payload;\n    return await authAPI.login(email, password, rememberMe);\n}\n\nasync function logoutRequest () {\n    return await authAPI.logout();\n}\n\nexport default function * () {\n    yield takeEvery(AUTH.GET_AUTH_USER_DATA, getAuthUserData);\n    yield takeEvery(AUTH.LOGIN, login);\n    yield takeEvery(AUTH.LOGOUT, logout);\n}\n","// outsource dependencies\nimport { takeEvery, put, call } from 'redux-saga/effects';\n\n// local dependencies\nimport { USERS } from '../constans/types';\nimport { usersAPI } from '../services/api';\n\n\nfunction * follow ({ type, ...payload }) {\n    const { userId } = payload;\n\n    try {\n        yield put({ type: USERS.TOGGLE_FOLLOWING_PROGRESS, payload: { isFetching: true, userId } });\n        const result = yield call(followUsersRequest, userId);\n\n        if (result) {\n            yield put({ type: USERS.FOLLOW_SUCCESS, userId });\n        }\n        yield put({ type: USERS.TOGGLE_FOLLOWING_PROGRESS, payload: { isFetching: false, userId } });\n    } catch (e) {\n        console.log(e);\n    }\n}\n\nfunction * unfollow ({ type, ...payload }) {\n    const { userId } = payload;\n\n    try {\n        yield put({ type: USERS.TOGGLE_FOLLOWING_PROGRESS, payload: { isFetching: true, userId } });\n        const result = yield call(unfollowUsersRequest, userId);\n\n        if (result) {\n            yield put({ type: USERS.UNFOLLOW_SUCCESS, userId });\n        }\n        yield put({ type: USERS.TOGGLE_FOLLOWING_PROGRESS, payload: { isFetching: false, userId } });\n    } catch (e) {\n        console.log(e);\n    }\n}\n\nfunction * requestUsers ({ type, ...payload }) {\n    const { currentPage, pageSize } = payload;\n\n    try {\n        yield put({ type: USERS.TOGGLE_IS_FETCHING, isFetching: true });\n        yield put({ type: USERS.SET_CURRENT_PAGE, currentPage });\n\n        const data = yield call(getUsersRequest, currentPage, pageSize);\n\n        yield put({ type: USERS.TOGGLE_IS_FETCHING, isFetching: false });\n        if (data) {\n            yield put({ type: USERS.SET_USERS, users: data.items });\n            yield put({ type: USERS.SET_TOTAL_USERS_COUNT, count: data.totalCount });\n        }\n    } catch (e) {\n        console.log(e);\n    }\n}\n\nfunction * setAllUsers ({ type, ...payload }) {\n    try {\n        yield put({ type: USERS.TOGGLE_IS_FETCHING, isFetching: true });\n        const response = yield call(getUsersRequest);\n        let b = 1;\n\n        for (let i = 0; i <= response.totalCount; i+= 100) {\n            b++;\n            const data = yield call(getUsersRequest, b, 100);\n\n            yield put({ type: USERS.ALL_USERS, users: data.items });\n            yield put({ type: USERS.SET_FOLLOWED_USERS, users: data.items });\n        }\n        yield put({ type: USERS.TOGGLE_IS_FETCHING, isFetching: false });\n    } catch (e) {\n        console.log(e);\n    }\n}\n\nasync function followUsersRequest (userId) {\n    const response = await usersAPI.followUsers(userId);\n    if (!response.resultCode) {\n        return await true;\n    }\n}\n\nasync function unfollowUsersRequest (userId) {\n    const response = await usersAPI.unfollowUsers(userId);\n    if (!response.resultCode) {\n        return await true;\n    }\n}\n\nasync function getUsersRequest (currentPage, pageSize) {\n    const response = await usersAPI.getUsers(currentPage, pageSize);\n\n    return await response;\n}\n\nexport default function * () {\n    yield takeEvery(USERS.FOLLOW, follow);\n    yield takeEvery(USERS.UNFOLLOW, unfollow);\n    yield takeEvery(USERS.SET_ALL_USERS, setAllUsers);\n    yield takeEvery(USERS.REQUEST_USERS, requestUsers);\n}\n","// outsource dependencies\nimport { takeEvery, put, call } from 'redux-saga/effects';\n\n// local dependencies\nimport { PROFILE } from '../constans/types';\nimport { profileAPI } from '../services/api';\n\n\nfunction * reviewUser ({ type, ...payload }) {\n    const { userId } = payload;\n\n    try {\n        const profile = yield call(viewProfile, userId);\n        yield put({ type: PROFILE.SET_USER_PROFILE, payload: { profile, userId } });\n    } catch (e) {\n        console.log(e);\n    }\n}\n\nfunction * reviewStatus ({ type, ...payload }) {\n    const { userId } = payload;\n\n    try {\n        const response = yield call(getStatusRequest, userId);\n        yield put({ type: PROFILE.SET_STATUS, status: response });\n    } catch (e) {\n        console.log(e);\n    }\n}\n\nfunction * updateStatus ({ type, ...payload }) {\n    const { status } = payload;\n\n    try {\n        yield call(updateStatusRequest, status);\n        yield put({ type: PROFILE.SET_STATUS, status });\n    } catch (e) {\n        console.log(e);\n    }\n}\n\nfunction * savePhoto ({ type, ...payload }) {\n    const { file } = payload;\n\n    try {\n        const response = yield call(updateImageRequest, file);\n        yield put({ type: PROFILE.SET_PHOTO_SUCCESS, response });\n    } catch (e) {\n        console.log(e);\n    }\n}\n\nfunction * updateData ({ type, ...payload }) {\n    const { data, userId } = payload;\n\n    try {\n        const { website, facebook, vk, twitter, github, youtobe, instagram, mainLink } = data;\n        const primeryProfile = JSON.parse(localStorage.getItem('primeryProfile'))[0];\n        const profile = {\n            ...primeryProfile,\n            ...data,\n            contacts: { website, facebook, vk, twitter, github, youtobe, instagram, mainLink },\n        };\n\n        yield call(updateDataRequest, profile);\n        yield put({ type: PROFILE.SET_USER_PROFILE, payload: { profile, userId } });\n    } catch (e) {\n        console.log(e);\n    }\n}\n\n\nasync function viewProfile (id = 5197) {\n    const response = await profileAPI.viewProfile(id);\n    return response.data;\n}\n\nasync function getStatusRequest (userId = 5197) {\n    const response = await profileAPI.getStatus(userId);\n    return await response.data;\n}\n\nasync function updateStatusRequest (status) {\n    const response = await profileAPI.upadateStatus(status);\n    return await response.data;\n}\n\nasync function updateImageRequest (file) {\n    const response = await profileAPI.updateImage(file);\n    return await response.data.data.photos;\n}\n\nasync function updateDataRequest (obj) {\n    return await profileAPI.updateProfileData(obj);\n}\n\nexport default function * () {\n    yield takeEvery(PROFILE.USER_ID, reviewUser);\n    yield takeEvery(PROFILE.SAVE_PHOTO, savePhoto);\n    yield takeEvery(PROFILE.UPDATE_DATA, updateData);\n    yield takeEvery(PROFILE.GET_STATUS, reviewStatus);\n    yield takeEvery(PROFILE.UPDATE_STATUS, updateStatus);\n}\n","// outsource dependencies\nimport { fork } from 'redux-saga/effects';\n\n// local dependencies\nimport app from './app';\nimport auth from './auth';\nimport users from './users';\nimport profile from './profile';\n\n\nfunction * sagasRoot () {\n    yield fork(app);\n    yield fork(auth);\n    yield fork(users);\n    yield fork(profile);\n}\n\nexport default sagasRoot;\n","// outsource dependencies\n\n// local dependencies\nimport { APP } from '../constans/types';\n\nconst initialState = {\n    initialized: false,\n    errorMessages: null,\n};\n\nexport const selector = (state) => state.app;\n\nconst appReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case APP.INITIALIZED_SUCCESS:\n\n            return {\n                ...state,\n                initialized: true,\n            };\n\n        case APP.SET_ERROR_MESSAGES: {\n            const { messages } = action;\n\n            return {\n                ...state,\n                errorMessages: messages,\n            };\n        }\n\n        default:\n            return state;\n    }\n};\n\nexport default appReducer;\n","// outsource dependencies\n\n// local dependencies\nimport { AUTH } from '../constans/types';\n\n\nconst initialState = {\n    userId: null,\n    email: null,\n    login: null,\n    isAuth: false,\n    test: { email: 'gipohir867@ismailgul.net', password: 'qwerty123456', name: 'HRinsky' },\n};\n\nexport const selector = (state) => state.auth;\n\nconst authReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case AUTH.SET_USER_DATA:\n\n            return {\n                ...state,\n                ...action.payload,\n                userId: action.payload.id,\n            };\n        case AUTH.SET_LOGOUT:\n\n            return {\n                ...state,\n                userId: null,\n                email: null,\n                login: null,\n                isAuth: false,\n            };\n\n        default:\n            return state;\n    }\n};\n\nexport default authReducer;\n","// outsource dependencies\nimport _ from 'lodash';\n\n// local dependencies\nimport { USERS } from '../constans/types';\n\nconst initialState = {\n    users: [],\n    pageSize: 10,\n    allUsers: [],\n    currentPage: 1,\n    isFetching: true,\n    followedUsers: [],\n    totalUsersCount: 0,\n    followingInProgress: [],\n};\n\nexport const selector = (state) => state.users;\n\nconst usersReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case USERS.FOLLOW_SUCCESS: {\n            const { userId } = action;\n\n            return {\n                ...state,\n                users: _.map(state.users, (user) => {\n                    if (user.id === userId) {\n                        return { ...user, followed: true };\n                    }\n\n                    return user;\n                }),\n            };\n        }\n\n        case USERS.UNFOLLOW_SUCCESS: {\n            const { userId } = action;\n\n            return {\n                ...state,\n                users: _.map(state.users, (user) => {\n                    if (user.id === userId) {\n                        return { ...user, followed: false };\n                    }\n\n                    return user;\n                }),\n            };\n        }\n\n        case USERS.ALL_USERS: {\n            const { users } = action;\n\n            return {\n                ...state,\n                allUsers: [state.allUsers, ...users],\n            };\n        }\n\n        case USERS.SET_USERS: {\n            const { users } = action;\n\n            return {\n                ...state,\n                users: users,\n            };\n        }\n\n        case USERS.SET_FOLLOWED_USERS: {\n            const { users } = action;\n            const setFollowedUsers = _.filter(users, (user) => user.followed);\n\n            return {\n                ...state,\n                followedUsers: [...state.followedUsers, ...setFollowedUsers],\n            };\n        }\n\n        case USERS.USER_REMOVE: {\n            const { userId } = action;\n\n            return {\n                ...state,\n                users: _.filter(state.users, (user) => user.id !== userId),\n            };\n        }\n\n        case USERS.SET_CURRENT_PAGE: {\n            const { currentPage } = action;\n\n            return {\n                ...state,\n                currentPage: currentPage,\n            };\n        }\n\n        case USERS.SET_TOTAL_USERS_COUNT: {\n            const { count } = action;\n\n            return {\n                ...state,\n                totalUsersCount: count,\n            };\n        }\n\n        case USERS.TOGGLE_IS_FETCHING: {\n            const { isFetching } = action;\n\n            return {\n                ...state,\n                isFetching: isFetching,\n            };\n        }\n\n        case USERS.TOGGLE_FOLLOWING_PROGRESS: {\n            const { isFetching, userId } = action.payload;\n\n            return {\n                ...state,\n                followingInProgress: isFetching\n                    ? [...state.followingInProgress, userId]\n                    : _.filter(state.followingInProgress, (id) => id !== userId),\n            };\n        }\n\n        default:\n            return state;\n    }\n};\n\nexport default usersReducer;\n","export const currentDate = {\n\n    getDate (prevDate = 0) {\n        const date = this._setPrevDate(prevDate);\n        const formatterDate = new Intl.DateTimeFormat('en');\n\n        return formatterDate.format(date);\n    },\n\n    getTime () {\n        const currentTime = new Date();\n        const formatterTime = new Intl.DateTimeFormat('en', {\n            hour: 'numeric',\n            minute: 'numeric',\n        });\n\n        return formatterTime.format(currentTime);\n    },\n\n    _setPrevDate (d) {\n        const date = new Date();\n        return date.setDate(date.getDate() - d);\n    },\n};\n","// outsource dependencies\nimport _ from 'lodash';\n\n// local dependencies\nimport { PROFILE } from '../constans/types';\nimport { currentDate } from '../components/time';\n\nconst initialState = {\n    postData: [\n        {\n            id: 5,\n            like: 0,\n            youselfLike: false,\n            post: 'Lorem ipsum dolor sit amet.',\n            date: { date: currentDate.getDate(1), time: '17:15' },\n        },\n        {\n            id: 4,\n            like: 1,\n            youselfLike: false,\n            post: 'Lorem ipsum dolor sit.',\n            date: { date: currentDate.getDate(13), time: '17:15' },\n        },\n        {\n            id: 3,\n            like: 60,\n            youselfLike: false,\n            post: 'Lorem ipsum dolor.',\n            date: { date: currentDate.getDate(18), time: '19:70' },\n        },\n        { id: 2, like: 0, youselfLike: true, post: 'Lorem ipsum.', date: { date: currentDate.getDate(31), time: '17:15' } },\n        { id: 1, like: 23, youselfLike: true, post: 'Lorem.', date: { date: currentDate.getDate(31), time: '17:15' } },\n    ],\n    profile: null,\n    status: '',\n};\n\nexport const selector = (state) => state.profile;\n\nconst profileReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case PROFILE.ADD_POST: {\n            const newPost = {\n                id: state.postData.length + 1,\n                like: 0,\n                youselfLike: false,\n                post: action.newPostBody,\n                date: { date: currentDate.getDate(), time: currentDate.getTime() },\n            };\n\n            return {\n                ...state,\n                postData: [newPost, ...state.postData],\n            };\n        }\n\n        case PROFILE.REMOVE_POST:\n\n            return {\n                ...state,\n                postData: _.filter(state.postData, (post) => post.id !== action.idPost),\n            };\n\n        case PROFILE.SET_STATUS:\n\n            return {\n                ...state,\n                status: action.status,\n            };\n\n        case PROFILE.SET_USER_PROFILE: {\n            const { profile, userId } = action.payload;\n\n            if (userId === profile.userId) {\n                localStorage.removeItem('primeryProfile');\n                localStorage.setItem('primeryProfile', JSON.stringify([profile]));\n            }\n\n            return {\n                ...state,\n                profile,\n            };\n        }\n\n        case PROFILE.SET_PHOTO_SUCCESS:\n\n            return {\n                ...state,\n                profile: {\n                    ...state.profile,\n                    photos: action.photos,\n                },\n            };\n\n        case PROFILE.SET_LIKE:\n\n            return {\n                ...state,\n                postData: _.map(state.postData, (post) => {\n                    if (post.youselfLike && post.id === action.idPost) {\n                        return { ...post, youselfLike: false };\n                    } else if (!post.youselfLike && post.id === action.idPost) {\n                        return { ...post, youselfLike: true };\n                    }\n\n                    return { ...post };\n                }),\n\n            };\n\n        default:\n            return state;\n    }\n};\n\nexport default profileReducer;\n","// outsource dependencies\nimport _ from 'lodash';\n\n// local dependencies\nimport { MESSAGE } from '../constans/types';\nimport { currentDate } from '../components/time';\n\nconst initialState = {\n    acquaintancesUser: [],\n    messages: [\n        { name: 'Mark Zuckerberg', id: 0, messages: [\n            { date: currentDate.getDate(1), sendMessage: false, id: 1, time: '23:12:36', read: true, message: 'Hey.' },\n            { date: currentDate.getDate(1), sendMessage: false, id: 2, time: '23:12:58', read: false, message: 'Your license to use react can be revoked if you compete with Facebook' },\n            { date: currentDate.getDate(1), sendMessage: false, id: 3, time: '23:13:15', read: false, message: 'you knew about this?' },\n            { date: currentDate.getDate(1), sendMessage: false, id: 4, time: '23:13:18', read: false, message: 'So you have to finish what you\\'re doing!' },\n        ],\n        img: 'https://scontent.fhrk5-1.fna.fbcdn.net/v/t1.0-1/p240x240/79515135_10111007623880301_5111576226921709568_o.jpg?_nc_cat=1&_nc_sid=dbb9e7&_nc_ohc=TQOe9CFVSxMAX9G_tPa&_nc_ht=scontent.fhrk5-1.fna&_nc_tp=6&oh=491d0ccbb6737e19d48600b9ad80c6e9&oe=5EA8A1B3',\n        href: 'https://www.facebook.com/zuck',\n        },\n        { name: 'Elon Musk', id: 1, messages: [\n            { date: currentDate.getDate(1), sendMessage: false, id: 1, time: '20:12:36', read: false, message: 'We have extra FDA-approved ventilators. Will ship to hospitals worldwide within Tesla delivery regions. Device & shipping cost are free. Only requirement is that the vents are needed immediately for patients, not stored in a warehouse. Please me or @Tesla know.' },\n            { date: currentDate.getDate(1), sendMessage: false, id: 4, time: '20:13:18', read: false, message: 'https://twitter.com/elonmusk' },\n            { date: currentDate.getDate(1), sendMessage: false, id: 4, time: '20:13:18', read: false, message: 'More on my twitter account ;)' },\n        ],\n        img: 'https://pbs.twimg.com/profile_images/1223183340171415552/XQcxk5Zb_400x400.jpg',\n        },\n        { name: 'Alexandrew', id: 6261, messages: [\n            { date: currentDate.getDate(2), sendMessage: false, id: 1, time: '12:12:36', read: true, message: 'Hi' },\n        ],\n        href: '/profile/5197',\n        },\n        { name: 'John Doe', id: 99999, messages: [\n            { date: currentDate.getDate(6), sendMessage: true, id: 1, time: '12:12:36', read: true, message: 'lorem' },\n        ],\n        },\n    ],\n};\n\nexport const selector = (state) => state.message;\n\nconst messageReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case MESSAGE.SET_MARK: {\n            const markRead = _.map(state.messages, (dialog) => {\n                if (dialog.id === +action.id) {\n                    const newMessage = _.map(dialog.messages, (message) => {\n                        if (message.read) {\n                            return { ...message, read: false };\n                        }\n\n                        return { ...message, read: true };\n                    });\n\n                    return { ...dialog, messages: [...newMessage] };\n                }\n\n                return dialog;\n            });\n\n            return {\n                ...state,\n                messages: [...markRead],\n            };\n        }\n\n        default:\n            return state;\n    }\n};\n\nexport default messageReducer;\n","// outsource dependencies\nimport createSagaMiddleware from 'redux-saga';\nimport { reducer as formReducer } from 'redux-form';\nimport { applyMiddleware, combineReducers, createStore } from 'redux';\n\n// local dependencies\nimport sagasRoot from '../sagas';\nimport appReducer from './app-reducer';\nimport authReducer from './auth-reducer';\nimport usersReducer from './users-reducer';\nimport profileReducer from './profile-reducer';\nimport messageReducer from './message-reducer';\n\n\nconst reducers = combineReducers({\n    app: appReducer,\n    auth: authReducer,\n    form: formReducer,\n    users: usersReducer,\n    profile: profileReducer,\n    message: messageReducer,\n});\n\nconst sagaMiddleware = createSagaMiddleware();\nconst store = createStore(reducers, applyMiddleware(sagaMiddleware));\nsagaMiddleware.run(sagasRoot);\n\nexport default store;\n","// outsource dependencies\nimport React, { memo } from 'react';\nimport classNames from 'classnames/bind';\n\n// local dependencies\nimport '../../style/_base.scss';\nimport styles from './footer.module.scss';\n\n\nconst Error = memo(() => {\n    const cx = classNames.bind(styles);\n\n    return (\n        <footer className={cx('footer', styles.bottomBlock)}>\n            <div className=\"container\">\n                <div className={styles.bottomDesc}>select language</div>\n                <div className={styles.bottomDesc}>created for education purposes</div>\n                <div className={styles.bottomDesc}>©alexandrew 2020</div>\n            </div>\n        </footer>\n    );\n});\n\nexport default Error;\n","// outsource dependencies\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames/bind';\nimport { Nav, NavItem, NavLink } from 'reactstrap';\nimport React, { memo, useCallback, useEffect } from 'react';\n\n// local dependencies\nimport Footer from '../footer';\nimport '../../style/_base.scss';\nimport styles from './error.module.scss';\nimport thumb from '../../images/content/thumb_broken.png';\n\n\nconst Error = memo((props) => {\n    const { history } = props;\n    const cx = classNames.bind(styles);\n\n    useEffect(() => {\n        document.title = 'Page Not Found';\n    });\n    const prevPage = useCallback(() => history.goBack(), [history]);\n\n    return (\n        <section className={cx('wrapper', styles.error)}>\n            <div className={cx('content', styles.errorContainer)}>\n                <h1 className={cx('mb-5')}>\n                    This page isn&#39;t available\n                </h1>\n                <p className={cx('mb-5', styles.errorDesc)}><strong>\n                    The link you followed may be broken, or the page may have been removed.\n                </strong></p>\n                <img className={cx('mb-5', styles.errorImage)} src={thumb} alt=\"error page\"/>\n                <Nav>\n                    <NavItem className={cx(styles.errorItem)}>\n                        <NavLink onClick={prevPage}>\n                            Go back to the previous page\n                        </NavLink>\n                    </NavItem>\n                    <NavItem className={cx(styles.errorItem)}>\n                        <NavLink href=\"/profile\">\n                            Go to profile\n                        </NavLink>\n                    </NavItem>\n                    <NavItem className={cx(styles.errorItem)}>\n                        <NavLink target=\"_blank\" href=\"https://mail.google.com/mail/u/0/?view=cm&fs=1&to=andrew.alexandrow97@gmail.com&su=socialNetwork&tf=1\">\n                            Visit our Help Center\n                        </NavLink>\n                    </NavItem>\n                </Nav>\n            </div>\n            <Footer />\n        </section>\n    );\n});\n\nError.propTypes = {\n    history: PropTypes.object.isRequired,\n};\n\nexport default Error;\n","// outsource dependencies\nimport PropTypes from 'prop-types';\nimport React, { memo } from 'react';\nimport classNames from 'classnames/bind';\nimport { Input as CustomInput, Label, FormGroup } from 'reactstrap';\n\n// local dependencies\nimport styles from './input.scss';\n\n\nconst Input = memo((props) => {\n    const cx = classNames.bind(styles);\n    const { classNameLabel, classNameInput, classNameContainer,\n        input, label, disabled, type, meta: { touched, error } } = props;\n\n    const hasError = touched && error;\n\n    return (\n        <FormGroup style={{ position: 'relative' }}\n            className={cx(styles.inputContainerDefault, classNameContainer)}\n        >\n            {label && (\n                <Label\n                    htmlFor={input.name}\n                    className={cx(styles.defaultLabel, classNameLabel)}\n                >\n                    {label}\n                </Label>\n            )}\n            <CustomInput\n                type={type}\n                id={input.name}\n                disabled={disabled}\n                {...input}\n                className={cx(classNameInput, {\n                    errorTextarea: hasError,\n                })}\n                onChange={(e) => input.onChange(e)}\n            />\n            {hasError && <div className={cx({ errorBlockLitle: hasError })}>{error}</div>}\n        </FormGroup>\n    );\n});\n\nInput.propTypes = {\n    attr: PropTypes.object,\n    label: PropTypes.string,\n    disabled: PropTypes.bool,\n    classNameLabel: PropTypes.string,\n    classNameInput: PropTypes.string,\n    classNameContainer: PropTypes.string,\n    type: PropTypes.string.isRequired,\n    meta: PropTypes.object.isRequired,\n    input: PropTypes.object.isRequired,\n};\n\nInput.defaultProps = {\n    attr: {},\n    label: '',\n    disabled: false,\n    classNameLabel: '',\n    classNameInput: '',\n    classNameContainer: '',\n};\n\nexport default Input;\n","// outsource dependencies\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames/bind';\nimport React, { memo } from 'react';\nimport { FormGroup, Label, Input } from 'reactstrap';\n\n// local dependencies\nimport styles from './checkbox.module.scss';\n\n\nexport const Checkbox = memo((props) => {\n    const cx = classNames.bind(styles);\n    const { input, name, classNameLabel, classNameInput, label, ...attr } = props;\n\n    const handleChange = (event) => input.onChange(event);\n\n    return (\n        <FormGroup className={cx(styles.formGroup)}>\n            <Label className={cx(styles.defaultLabel, classNameLabel)} check>\n                <Input name={name}\n                    type=\"checkbox\"\n                    onChange={handleChange}\n                    checked={Boolean(input.value)}\n                    className={cx(styles.defaultInput, classNameInput)}\n                    {...attr}/>\n                { label }\n            </Label>\n        </FormGroup>\n    );\n});\n\nCheckbox.propTypes = {\n    attr: PropTypes.object,\n    name: PropTypes.string,\n    descr: PropTypes.string,\n    label: PropTypes.string,\n    classNameLabel: PropTypes.string,\n    classNameInput: PropTypes.string,\n    meta: PropTypes.object.isRequired,\n    input: PropTypes.object.isRequired,\n};\n\nCheckbox.defaultProps = {\n    attr: {},\n    name: '',\n    descr: '',\n    label: '',\n    classNameLabel: '',\n    classNameInput: '',\n};\n","// outsource dependencies\nimport PropTypes from 'prop-types';\nimport React, { memo } from 'react';\nimport classNames from 'classnames/bind';\nimport { Field, reduxForm } from 'redux-form';\n\n// local dependencies\nimport { connect } from 'react-redux';\nimport styles from './login.module.scss';\nimport Input from '../../components/input';\nimport { AUTH } from '../../constans/types';\nimport { Checkbox } from '../../components/checkbox';\nimport { selector as appSelector } from '../../redusers/app-reducer';\nimport { selector as authSelector } from '../../redusers/auth-reducer';\n\n\nconst LoginForm = memo((props) => {\n    const cx = classNames.bind(styles);\n    const { handleSubmit, errorMessages, submitting, modal, checkbox, emailStyle, login } = props;\n\n\n    return (\n        <form className={styles.formLine} onSubmit={handleSubmit(login)}>\n            <Field type=\"text\"\n                name=\"email\"\n                placeholder=\"Email\"\n                component={Input}\n                style={{ ...emailStyle }}\n                classNameInput={cx(styles.formInput)}\n                classNameLabel={cx({ formInputModal: modal })}\n            />\n            <Field name=\"password\"\n                component={Input}\n                placeholder=\"Password\"\n                type={modal ? 'hidden' : 'password'}\n                classNameInput={cx(styles.formInput)}\n                classNameLabel={cx({ formInputModal: modal })}\n            />\n            {\n                checkbox && (\n                    <Field name=\"rememberMe\"\n                        classNameInput={styles.checkbox}\n                        classNameLabel={styles.checkboxLabel}\n                        label=\"Remember password\" component={Checkbox}\n                    />\n                )\n            }\n            {\n                errorMessages && <div className={styles.formSummuryError}>\n                    {errorMessages}\n                </div>\n            }\n            <div>\n                <button className={cx('btn', styles.formBtn, { formBtnModal: modal })}\n                    type=\"submit\" disabled={submitting}>\n                    Log In\n                </button>\n            </div>\n        </form>\n    );\n});\n\nLoginForm.propTypes = {\n    modal: PropTypes.bool,\n    checkbox: PropTypes.bool,\n    emailStyle: PropTypes.object,\n    errorMessages: PropTypes.string,\n    login: PropTypes.func.isRequired,\n    submitting: PropTypes.bool.isRequired,\n    handleSubmit: PropTypes.func.isRequired,\n};\n\nLoginForm.defaultProps = {\n    modal: false,\n    emailStyle: {},\n    errorMessages: '',\n    checkbox: false,\n};\n\nexport default connect(\n    // mapStateToProps\n    (state) => ({\n        initialValues: authSelector(state).test,\n        errorMessages: appSelector(state).errorMessages,\n    }),\n    // mapDispatchToProps\n    (dispatch) => ({\n        login: (payload) => dispatch({ type: AUTH.LOGIN, ...payload }),\n    }),\n)(reduxForm({\n    form: 'login',\n    enableReinitialize: true,\n    validate: (values) => {\n        const errors = {};\n\n        if (!values.email) {\n            errors.email = 'Required';\n        } else if (values.email.length > 40) {\n            errors.email = 'Must be 40 characters or less';\n        }\n\n        if (!values.password) {\n            errors.password = 'Required';\n        } else if (values.password.length > 20) {\n            errors.password = 'Must be 20 characters or less';\n        } else if (values.password.length < 4) {\n            errors.password = 'Must be 4 characters or more';\n        }\n\n        return errors;\n    },\n})(LoginForm));\n","// outsource dependencies\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames/bind';\nimport React, { memo } from 'react';\n\n// local dependencies\nimport user from '../../images/icon/user.svg';\nimport styles from './avatar.module.scss';\n\n\nconst Avatar = memo((props) => {\n    const cx = classNames.bind(styles);\n    const { width, height, src, borderRadius, style, ...attr } = props;\n\n    return (\n        <div style={{ width: `${width}px`, height: `${height}px` }}\n            className={cx(styles.img, { imgBorderRadius: borderRadius })}\n            {...attr}>\n            <img style={{ ...style }} alt=\"User\" src={src || user}/>\n        </div>\n    );\n});\n\nAvatar.propTypes = {\n    src: PropTypes.string,\n    attr: PropTypes.object,\n    style: PropTypes.object,\n    borderRadius: PropTypes.bool,\n    width: PropTypes.string.isRequired,\n    height: PropTypes.string.isRequired,\n};\n\nAvatar.defaultProps = {\n    src: '',\n    attr: {},\n    style: {},\n    borderRadius: false,\n};\n\nexport default Avatar;\n","// outsource dependencies\nimport React from 'react';\nimport Modal from 'react-modal';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames/bind';\n\n// local dependencies\nimport LoginForm from './LoginForm';\nimport styles from './login.module.scss';\nimport Avatar from '../../components/avatar';\n\nexport const ModalAccount = React.memo((props) => {\n    const cx = classNames.bind(styles);\n    const { profile, showModal, setShowModal } = props;\n\n    return (\n        <Modal\n            isOpen={showModal}\n            ariaHideApp={false}\n            onRequestClose={() => setShowModal(false)}\n            overlayClassName={styles.overlay}\n            className={cx(styles.modal, styles.modal__account)}\n            contentLabel=\"Account Modal\"\n        >\n            <div className={styles.avatar}>\n                <Avatar width=\"160\" height=\"160\" src={null}/>\n                <h3 className={cx(styles.modalTitle, styles.modalTitle__account)}>\n                    {profile.name}\n                </h3>\n            </div>\n            <LoginForm modal={true}\n                checkbox={true}\n                profile={profile}\n            />\n            <button title=\"Close modal\"\n                className={styles.modalClose}\n                onClick={() => setShowModal(false)}\n            >\n                ×\n            </button>\n            <a className={styles.modalLink} href=\"/#\">Sign Up?</a>\n        </Modal>\n    );\n});\n\nModalAccount.propTypes = {\n    showModal: PropTypes.bool.isRequired,\n    profile: PropTypes.object.isRequired,\n    setShowModal: PropTypes.func.isRequired,\n};\n\nexport const ModalLogin = React.memo((props) => {\n    const { showModal, setShowModal } = props;\n\n    return (\n        <Modal\n            isOpen={showModal}\n            ariaHideApp={false}\n            onRequestClose={() => setShowModal(false)}\n            overlayClassName={styles.overlay}\n            className={styles.modal}\n            contentLabel=\"Login Modal\"\n        >\n            <h3 className={styles.modalTitle}>Log Into Facebook</h3>\n            <LoginForm modal={true} checkbox={true}/>\n            <button title=\"Close modal\"\n                onClick={() => setShowModal(false)}\n                className={styles.modalClose}>\n                ×\n            </button>\n            <a className={styles.modalLink} href=\"/#\">Sign Up?</a>\n        </Modal>\n    );\n});\n\nModalLogin.propTypes = {\n    showModal: PropTypes.bool.isRequired,\n    setShowModal: PropTypes.func.isRequired,\n};\n","// outsource dependencies\nimport classNames from 'classnames/bind';\nimport { useSelector } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport React, { memo, useState } from 'react';\n\n// local dependencies\nimport LoginForm from './LoginForm';\nimport { ModalAccount } from './Modals';\nimport styles from './login.module.scss';\nimport Footer from '../../common/footer';\nimport Avatar from '../../components/avatar';\nimport { selector as authSelector } from '../../redusers/auth-reducer';\n\n\nconst Login = memo(() => {\n    const cx = classNames.bind(styles);\n\n    // state\n    const test = useSelector((state) => authSelector(state).test);\n    const isAuth = useSelector((state) => authSelector(state).isAuth);\n\n    // local state\n    // const [showModalLogin, setShowModalLogin] = useState(false);\n    const [showModalAccount, setShowModalAccount] = useState(false);\n\n    if (isAuth) {\n        return <Redirect to={'/profile'}/>;\n    }\n\n    return (\n        <section className=\"wrapper\">\n            <div className={cx('content', styles.topBlock)}>\n                <div className=\"container\">\n                    {/* <ModalLogin showModal={showModalLogin} setShowModal={setShowModalLogin} */}\n                    {/* onSubmit={onSubmit} />*/}\n                    <div className={cx(styles.loginBlock, {\n                        loginBlockDisable: showModalAccount,\n                    })}>\n                        <div>\n                            <div className={styles.logo}/>\n                            <h2 className={styles.title}>Recent Logins</h2>\n                            <p className={styles.desc}>Click your picture or add an account.</p>\n                            <ul className={styles.list}>\n                                <ModalAccount profile={test}\n                                    showModal={showModalAccount}\n                                    setShowModal={setShowModalAccount}\n                                />\n                                <li title={test.name}\n                                    className={cx('btn', styles.item)}\n                                    onClick={() => setShowModalAccount(true)}\n                                >\n                                    <div className={styles.itemBlock}>\n                                        <Avatar width=\"160\" height=\"160\"\n                                            style={{ borderRadius: '5px 5px 0 0' }} src={null}/>\n                                        <div className={styles.itemBlockDesc}>\n                                            {test.name}\n                                        </div>\n                                    </div>\n                                </li>\n                                {/* <li onClick={() => setShowModalLogin(true)} title=\"Add Account\" */}\n                                {/* className={cx(\"btn\", styles.item, styles.item__add)}>*/}\n                                {/* <div className={cx(styles.itemBlock, styles.itemBlock__add)}>*/}\n                                {/* <div className={styles.itemAddBlock}/>*/}\n                                {/* <div className={styles.itemBlockDesc}>*/}\n                                {/* Add Account*/}\n                                {/* </div>*/}\n                                {/* </div>*/}\n                                {/* </li>*/}\n                            </ul>\n                        </div>\n                        <div>\n                            <div className={cx(styles.blockForm)}>\n                                <LoginForm />\n                                <a className={cx('btn', styles.logBtn)}\n                                    href=\"https://social-network.samuraijs.com/signUp\"\n                                >\n                                    Create New Account\n                                </a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <Footer/>\n        </section>\n    );\n});\n\nexport default Login;\n","// outsource dependencies\nimport React, { memo } from 'react';\n\n// local dependencies\nimport styles from './preloader.module.scss';\n\n\nconst Preloader = memo(() => {\n    return (\n        <div className={styles.preloader}>\n            <svg className=\"lds-spin\" width=\"200px\" height=\"200px\" xmlns=\"http://www.w3.org/2000/svg\"\n                viewBox=\"0 0 100 100\">\n                <g transform=\"translate(80,50)\">\n                    <g transform=\"rotate(0)\">\n                        <circle cx=\"0\" cy=\"0\" r=\"10\" fill=\"#1d3f72\" fillOpacity=\"1\" transform=\"scale(1.0193 1.0193)\">\n                            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.875s\" values=\"1.1 1.1;1 1\"\n                                keyTimes=\"0;1\"\n                                dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n                            <animate attributeName=\"fill-opacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\"\n                                begin=\"-0.875s\"></animate>\n                        </circle>\n                    </g>\n                </g>\n                <g transform=\"translate(71.21320343559643,71.21320343559643)\">\n                    <g transform=\"rotate(45)\">\n                        <circle cx=\"0\" cy=\"0\" r=\"10\" fill=\"#1d3f72\" fillOpacity=\"0.875\" transform=\"scale(1.0318 1.0318)\">\n                            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.75s\" values=\"1.1 1.1;1 1\"\n                                keyTimes=\"0;1\"\n                                dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n                            <animate attributeName=\"fill-opacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\"\n                                begin=\"-0.75s\"></animate>\n                        </circle>\n                    </g>\n                </g>\n                <g transform=\"translate(50,80)\">\n                    <g transform=\"rotate(90)\">\n                        <circle cx=\"0\" cy=\"0\" r=\"10\" fill=\"#1d3f72\" fillOpacity=\"0.75\" transform=\"scale(1.0443 1.0443)\">\n                            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.625s\" values=\"1.1 1.1;1 1\"\n                                keyTimes=\"0;1\"\n                                dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n                            <animate attributeName=\"fill-opacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\"\n                                begin=\"-0.625s\"></animate>\n                        </circle>\n                    </g>\n                </g>\n                <g transform=\"translate(28.786796564403577,71.21320343559643)\">\n                    <g transform=\"rotate(135)\">\n                        <circle cx=\"0\" cy=\"0\" r=\"10\" fill=\"#1d3f72\" fillOpacity=\"0.625\" transform=\"scale(1.0568 1.0568)\">\n                            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.5s\" values=\"1.1 1.1;1 1\" keyTimes=\"0;1\"\n                                dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n                            <animate attributeName=\"fill-opacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\"\n                                begin=\"-0.5s\"></animate>\n                        </circle>\n                    </g>\n                </g>\n                <g transform=\"translate(20,50.00000000000001)\">\n                    <g transform=\"rotate(180)\">\n                        <circle cx=\"0\" cy=\"0\" r=\"10\" fill=\"#1d3f72\" fillOpacity=\"0.5\" transform=\"scale(1.0693 1.0693)\">\n                            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.375s\" values=\"1.1 1.1;1 1\"\n                                keyTimes=\"0;1\"\n                                dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n                            <animate attributeName=\"fill-opacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\"\n                                begin=\"-0.375s\"></animate>\n                        </circle>\n                    </g>\n                </g>\n                <g transform=\"translate(28.78679656440357,28.786796564403577)\">\n                    <g transform=\"rotate(225)\">\n                        <circle cx=\"0\" cy=\"0\" r=\"10\" fill=\"#1d3f72\" fillOpacity=\"0.375\" transform=\"scale(1.0818 1.0818)\">\n                            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.25s\" values=\"1.1 1.1;1 1\"\n                                keyTimes=\"0;1\"\n                                dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n                            <animate attributeName=\"fill-opacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\"\n                                begin=\"-0.25s\"></animate>\n                        </circle>\n                    </g>\n                </g>\n                <g transform=\"translate(49.99999999999999,20)\">\n                    <g transform=\"rotate(270)\">\n                        <circle cx=\"0\" cy=\"0\" r=\"10\" fill=\"#1d3f72\" fillOpacity=\"0.25\" transform=\"scale(1.0943 1.0943)\">\n                            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.125s\" values=\"1.1 1.1;1 1\"\n                                keyTimes=\"0;1\"\n                                dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n                            <animate attributeName=\"fill-opacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\"\n                                begin=\"-0.125s\"></animate>\n                        </circle>\n                    </g>\n                </g>\n                <g transform=\"translate(71.21320343559643,28.78679656440357)\">\n                    <g transform=\"rotate(315)\">\n                        <circle cx=\"0\" cy=\"0\" r=\"10\" fill=\"#1d3f72\" fillOpacity=\"0.125\" transform=\"scale(1.0068 1.0068)\">\n                            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"0s\" values=\"1.1 1.1;1 1\" keyTimes=\"0;1\"\n                                dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n                            <animate attributeName=\"fill-opacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\"\n                                begin=\"0s\"></animate>\n                        </circle>\n                    </g>\n                </g>\n            </svg>\n        </div>\n    );\n});\n\nexport default Preloader;\n","// outsource dependencies\nimport React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames/bind';\n\n// local dependencies\nimport '../../style/_base.scss';\nimport styles from './pagination.module.scss';\n\nconst Pagination = memo((props) => {\n    const cx = classNames.bind(styles);\n    const { currentPage, totalUsersCount, pageSize, onPageChanged } = props;\n\n    let paginator;\n    const pages = [];\n    const pagesCount = Math.ceil(totalUsersCount / pageSize);\n\n    for (let i = 1; i <= pagesCount; i++) {\n        pages.push(i);\n    }\n\n    if (currentPage < 4) {\n        paginator = pages.slice(0, 5);\n    } else if (currentPage > pages.length - 3) {\n        paginator = pages.slice(pages.length - 5);\n    } else {\n        paginator = pages.slice(currentPage - 3, currentPage + 2);\n    }\n\n    return <ul className={styles.list}>\n        {\n            currentPage > 3\n            && <li onClick={() => onPageChanged(1)}\n                className={cx('btn', styles.pages, {\n                    selectedPage: currentPage === 1,\n                })}\n            >\n                1\n            </li>\n        }\n        {\n            paginator.map((page) => (\n                <li key={page}\n                    onClick={() => onPageChanged(page)}\n                    className={cx('btn', styles.pages, {\n                        selectedPage: currentPage === page,\n                    })}\n                >\n                    {page}\n                </li>\n            ))\n        }\n        {\n            currentPage < pages.length - 2\n            && <li onClick={() => onPageChanged(pages.length)}\n                className={cx('btn', styles.pages, {\n                    selectedPage: currentPage === pages.length,\n                })}\n            >\n                {pages.length}\n            </li>\n        }\n    </ul>;\n});\n\nPagination.propTypes = {\n    pageSize: PropTypes.number.isRequired,\n    currentPage: PropTypes.number.isRequired,\n    onPageChanged: PropTypes.func.isRequired,\n    totalUsersCount: PropTypes.number.isRequired,\n};\n\nexport default Pagination;\n","// outsource dependencies\nimport _ from 'lodash';\nimport PropTypes from 'prop-types';\nimport React, { memo } from 'react';\nimport classNames from 'classnames/bind';\nimport { NavLink } from 'react-router-dom';\n\n// local dependencies\nimport '../../style/_base.scss';\nimport styles from './Users.module.scss';\nimport Avatar from '../../components/avatar';\nimport Pagination from '../../components/pagination';\n\n\nconst Users = memo((props) => {\n    const cx = classNames.bind(styles);\n    const {\n        unfollow, follow, followingInProgress, onPageChanged,\n        users, userRemove, currentPage, totalUsersCount, pageSize,\n    } = props;\n\n    return <main className={cx('container', styles.Users)}>\n        <section className={cx('block', styles.PossibleAcquaintances)}>\n            <div className={styles.Header}>\n                <h2 className={styles.HeaderTitle}>\n                    People You May Know\n                </h2>\n            </div>\n            <ul className={styles.List}>\n                {\n                    _.map(users, (user) => (\n                        <li key={user.id} className={styles.Item}>\n                            <div className={styles.Info}>\n                                <div className={styles.Photos}>\n                                    <Avatar width=\"75\" height=\"75\" src={user.photos.small}/>\n                                </div>\n                                <div className={styles.Title}>\n                                    <NavLink to={`/profile/${user.id}`}\n                                        className={styles.Username}\n                                    >\n                                        {user.name}\n                                    </NavLink>\n                                    <div className={styles.Status}>\n                                        {user.status}\n                                    </div>\n                                </div>\n                            </div>\n                            <div className={styles.Keyboard}>\n                                {user.followed\n                                    ? <button onClick={() => unfollow(user.id)}\n                                        className={cx('btn', styles.Button, styles.Unfollow)}\n                                        disabled={_.some(followingInProgress, (id) => id === user.id)}\n                                    >\n                                        Remove Friend\n                                    </button>\n                                    : <button onClick={() => follow(user.id)}\n                                        className={cx('btn', styles.Button, styles.Follow)}\n                                        disabled={_.some(followingInProgress, (id) => id === user.id)}\n                                    >\n                                        Add Friend\n                                    </button>\n                                }\n                                <button onClick={() => userRemove(user.id)}\n                                    className={cx('btn', styles.Remove)}\n                                >\n                                    Remove\n                                </button>\n                            </div>\n                        </li>\n                    ))\n                }\n            </ul>\n            <Pagination pageSize={pageSize}\n                currentPage={currentPage}\n                onPageChanged={onPageChanged}\n                totalUsersCount={totalUsersCount}\n            />\n        </section>\n    </main>;\n});\n\nUsers.propTypes = {\n    follow: PropTypes.func.isRequired,\n    users: PropTypes.array.isRequired,\n    unfollow: PropTypes.func.isRequired,\n    userRemove: PropTypes.func.isRequired,\n    pageSize: PropTypes.number.isRequired,\n    onPageChanged: PropTypes.func.isRequired,\n    currentPage: PropTypes.number.isRequired,\n    totalUsersCount: PropTypes.number.isRequired,\n    followingInProgress: PropTypes.array.isRequired,\n};\n\nexport default Users;\n","// outsource dependencies\nimport { compose } from 'redux';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport React, { PureComponent } from 'react';\n\n// local dependencies\nimport Users from './Users';\nimport { USERS } from '../../constans/types';\nimport { selector } from '../../redusers/users-reducer';\nimport Preloader from '../../components/preloader/Preloader';\n\n\nclass UsersContainer extends PureComponent {\n    constructor (props) {\n        super(props);\n\n        this.onPageChanged = this.onPageChanged.bind(this);\n    }\n\n    componentDidMount () {\n        this.props.requestUsers(this.props.currentPage, this.props.pageSize);\n    }\n\n    onPageChanged (pageNumber) {\n        window.scrollTo(0, 0);\n        this.props.requestUsers(pageNumber, this.props.pageSize);\n    }\n\n    render () {\n        if (this.props.isFetching) {\n            return <Preloader/>;\n        }\n\n        return <Users {...this.props} onPageChanged={this.onPageChanged}/>;\n    }\n}\n\nUsersContainer.propTypes = {\n    pageSize: PropTypes.number.isRequired,\n    isFetching: PropTypes.bool.isRequired,\n    currentPage: PropTypes.number.isRequired,\n    requestUsers: PropTypes.func.isRequired,\n};\n\nexport default compose(\n    connect(\n        // mapStateToProps\n        (state) => ({\n            users: selector(state).users,\n            pageSize: selector(state).pageSize,\n            isFetching: selector(state).isFetching,\n            currentPage: selector(state).currentPage,\n            totalUsersCount: selector(state).totalUsersCount,\n            followingInProgress: selector(state).followingInProgress,\n        }),\n        // mapDispatchToProps\n        (dispatch) => ({\n            follow: (userId) => dispatch({ type: USERS.FOLLOW, userId }),\n            unfollow: (userId) => dispatch({ type: USERS.UNFOLLOW, userId }),\n            userRemove: (userId) => dispatch({ type: USERS.USER_REMOVE, userId }),\n            setCurrentPage: (currentPage) => dispatch({ type: USERS.SET_CURRENT_PAGE, currentPage }),\n            requestUsers: (page, pageSize) => dispatch({ type: USERS.REQUEST_USERS, currentPage: page, pageSize }),\n        })\n    ),\n)(UsersContainer);\n","// outsource dependencies\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames/bind';\nimport React, { useState, useCallback } from 'react';\nimport { Collapse, Navbar, NavbarToggler, NavbarBrand, Nav, NavItem, NavLink } from 'reactstrap';\n\n// local dependencies\nimport '../../style/_base.scss';\nimport styles from './header.module.scss';\nimport Avatar from '../../components/avatar';\n\n\nconst Header = React.memo((props) => {\n    const cx = classNames.bind(styles);\n    const { logout, photos, isAuth } = props;\n    const [collapsed, setCollapsed] = useState(true);\n    const [customAlert, setCustomAlert] = useState(true);\n\n    const toggleNavbar = useCallback(() => setCollapsed(!collapsed), [collapsed]);\n    const isLogout = useCallback(() => {\n        logout();\n        setCollapsed(true);\n    }, [logout, setCollapsed]);\n\n    return (\n        <header className={styles.headerContainer}>\n            <Navbar className={cx(styles.header)}>\n                {\n                    !isAuth && customAlert\n                    && <div className={cx(styles.headerAlert, { [styles.headerAlertCollapsed]: !collapsed })}>\n                        you were not log in.\n                        <NavLink className=\"d-inline pl-2\" href=\"/login\">log in?</NavLink>\n                        <span className=\"cursor-pointer\" onClick={() => setCustomAlert(false)}>[x]</span>\n                    </div>\n                }\n\n                <NavbarBrand className={styles.logo} href=\"/profile\">\n                    <div className={styles.logoWrapper}>\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n                            <path className={styles.logoIcon}\n                                d=\"M22.675 0h-21.35c-.732 0-1.325.593-1.325 1.325v21.351c0 .731.593 1.324 1.325 1.324h11.495v-9.294h-3.128v-3.622h3.128v-2.671c0-3.1 1.893-4.788 4.659-4.788 1.325 0 2.463.099 2.795.143v3.24l-1.918.001c-1.504 0-1.795.715-1.795 1.763v2.313h3.587l-.467 3.622h-3.12v9.293h6.116c.73 0 1.323-.593 1.323-1.325v-21.35c0-.732-.593-1.325-1.325-1.325z\"/>\n                        </svg>\n                    </div>\n                </NavbarBrand>\n                <Nav className={styles.nav}>\n                    <div className={styles.search}>\n                        <input className={styles.searchField}/>\n                        <button className={styles.searchButton}/>\n                    </div>\n                    <div className={styles.list}>\n                        <NavItem className={styles.item}>\n                            <NavLink className={cx('d-sm-flex d-none', styles.link, styles.linkProfile)}\n                                href=\"/profile\">\n                                <Avatar width=\"24\" height=\"24\"\n                                    borderRadius={true}\n                                    src={photos && photos.small}\n                                />\n                                <span className={styles.linkProfileText}>\n                  Profile\n                                </span>\n                            </NavLink>\n                        </NavItem>\n                        <NavItem className={styles.item}>\n                            <NavLink className={cx('d-sm-flex d-none', styles.link, styles.linkProfile)}\n                                href=\"/message\">\n                                Message\n                            </NavLink>\n                        </NavItem>\n                        <NavItem className={styles.item}>\n                            <NavLink className={cx('d-md-flex d-none', styles.link, styles.linkProfile)} href=\"/users\">\n                                Find Friends\n                            </NavLink>\n                        </NavItem>\n                        <NavItem className={styles.item}>\n                            <NavLink className={cx('d-lg-flex d-none', styles.link, styles.linkProfile)}\n                                href=\"/setting\">\n                                Settings\n                            </NavLink>\n                        </NavItem>\n                        <NavItem className={styles.item}>\n                            <NavLink className={cx('d-xl-flex d-none', styles.link, styles.linkProfile)}\n                                onClick={logout}>\n                                Log Out\n                            </NavLink>\n                        </NavItem>\n                        <NavbarToggler className={cx('d-xl-none d-flex')} onClick={toggleNavbar}>\n                            <svg className={cx(styles.menu, { [styles.menuActive]: !collapsed })} width=\"24\" height=\"24\"\n                                viewBox=\"0 0 24 24\">\n                                <path d=\"M24 6h-24v-4h24v4zm0 4h-24v4h24v-4zm0 8h-24v4h24v-4z\"/>\n                            </svg>\n                        </NavbarToggler>\n                    </div>\n                </Nav>\n\n                <Collapse isOpen={!collapsed} className={styles.hiddenMenu} navbar>\n                    <Nav navbar>\n                        <NavItem>\n                            <NavLink className={cx('d-sm-none d-flex', styles.link, styles.linkHiddenMenu)}\n                                href=\"/profile\">\n                                <Avatar width=\"26\" height=\"26\"\n                                    borderRadius={true}\n                                    src={photos && photos.small}\n                                />\n                                <span className={styles.linkProfileText}>\n                                Profile\n                                </span>\n                            </NavLink>\n                        </NavItem>\n                        <NavItem>\n                            <NavLink className={cx('d-sm-none d-flex', styles.link, styles.linkHiddenMenu)}\n                                href=\"/message\">\n                                Message\n                            </NavLink>\n                        </NavItem>\n                        <NavItem>\n                            <NavLink className={cx('d-md-none d-flex', styles.link, styles.linkHiddenMenu)}\n                                href=\"/users\">\n                                Find Friends\n                            </NavLink>\n                        </NavItem>\n                        <NavItem>\n                            <NavLink className={cx('d-lg-none d-flex', styles.link, styles.linkHiddenMenu)}\n                                href=\"/setting\">\n                                Settings\n                            </NavLink>\n                        </NavItem>\n                        <NavItem>\n                            <NavLink\n                                className={cx('d-xl-none d-flex cursor-pointer', styles.link, styles.linkHiddenMenu, styles.linkHiddenMenuLast)}\n                                onClick={isLogout}>\n                                Log Out\n                            </NavLink>\n                        </NavItem>\n                    </Nav>\n                </Collapse>\n\n            </Navbar>\n        </header>\n    );\n});\n\nHeader.propTypes = {\n    photos: PropTypes.object,\n    logout: PropTypes.func.isRequired,\n    isAuth: PropTypes.bool.isRequired,\n};\n\nHeader.defaultProps = {\n    photos: {},\n};\n\nexport default Header;\n","// outsource dependencies\nimport { connect } from 'react-redux';\nimport React, { PureComponent } from 'react';\n\n// local dependencies\nimport Header from './Header';\nimport { AUTH } from '../../constans/types';\nimport { selector } from '../../redusers/auth-reducer';\n\n\nclass HeaderContainer extends PureComponent {\n    constructor (props) {\n        super(props);\n\n        this.state = {\n            photos: null,\n        };\n    }\n\n    componentDidMount () {\n        const primeryProfile = localStorage.getItem('primeryProfile');\n\n        if (primeryProfile) {\n            const photos = JSON.parse(primeryProfile)[0].photos;\n\n            this.setState(() => ({ photos }));\n        }\n    }\n\n    render () {\n        return <Header photos={this.state.photos} {...this.props} />;\n    }\n}\n\nexport default connect(\n    // mapStateToProps\n    (state) => ({\n        isAuth: selector(state).isAuth,\n    }),\n    // mapDispatchToProps\n    (dispatch) => ({\n        logout: () => dispatch({ type: AUTH.LOGOUT }),\n    })\n)(HeaderContainer);\n","// outsource dependencies\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames/bind';\nimport React, { memo, useCallback } from 'react';\n\n// local dependencies\nimport styles from './post.module.scss';\nimport Avatar from '../../../../components/avatar';\n\nconst Post = memo((props) => {\n    const cx = classNames.bind(styles);\n    const { id, date, like, fullName, photos, post, removePost, setLike, youselfLike } = props;\n\n    let likeStatus;\n\n    const onRemovePost = useCallback(() => removePost(id), [id, removePost]);\n    const onLike = useCallback(() => setLike(id), [id, setLike]);\n\n    if (like && youselfLike) {\n        likeStatus = <p className={styles.FieldPostDescLike}> You and {like} other </p>;\n    } else if (!like && youselfLike) {\n        likeStatus = <p className={styles.FieldPostDescLike}> You</p>;\n    } else if (like && !youselfLike) {\n        likeStatus = <p className={styles.FieldPostDescLike}> {like} </p>;\n    }\n\n    return (\n        <>\n            <div className={cx(styles.Block, styles.FieldPost)}>\n                <div className={styles.FieldPostKeyboard}>\n                    <div className={styles.FieldPostLeft}>\n                        <div className={styles.FieldPostAvaBorder}>\n                            <Avatar width=\"38\" height=\"38\" src={photos} borderRadius={true}/>\n                        </div>\n                        <div className={styles.FieldPostData}>\n                            <h4 className={styles.FieldPostNameAuthor}>\n                                {fullName}\n                            </h4>\n                            <span className={styles.FieldPostDateCreated}>\n                                {date.date} {date.time}\n                            </span>\n                        </div>\n                    </div>\n                    <button title=\"Remove post\"\n                        onClick={onRemovePost}\n                        className={styles.FieldPostRemove}>\n                        ×\n                    </button>\n                </div>\n                <p className={cx(styles.FieldPostDesc, { FieldPostDescUnderline: likeStatus })}>\n                    {post}\n                </p>\n                {likeStatus}\n                <div className={styles.FieldPostInfo}>\n                    <button title=\"Like\"\n                        onClick={onLike}\n                        className={cx(styles.FieldPostInfoLike, {\n                            FieldPostInfoLikeTrue: youselfLike,\n                            FieldPostInfoLikeFalse: !youselfLike,\n                        })}>\n                        <div className={cx(styles.FieldPostInfoHandLike, {\n                            FieldPostInfoHandLikeTrue: youselfLike,\n                            FieldPostInfoHandLikeFalse: !youselfLike,\n                        })}/>\n                        Like\n                    </button>\n                </div>\n            </div>\n        </>\n    );\n});\n\nPost.propTypes = {\n    photos: PropTypes.string,\n    id: PropTypes.number.isRequired,\n    date: PropTypes.object.isRequired,\n    post: PropTypes.string.isRequired,\n    like: PropTypes.number.isRequired,\n    setLike: PropTypes.func.isRequired,\n    fullName: PropTypes.string.isRequired,\n    removePost: PropTypes.func.isRequired,\n    youselfLike: PropTypes.bool.isRequired,\n};\n\nPost.defaultProps = {\n    photos: '',\n};\n\nexport default Post;\n","// outsource dependencies\nimport PropTypes from 'prop-types';\nimport React, { memo } from 'react';\nimport classNames from 'classnames/bind';\nimport { Field, reduxForm } from 'redux-form';\n\n// local dependencies\nimport Input from '../../../components/input';\nimport styles from './profilePost.module.scss';\nimport Avatar from '../../../components/avatar';\n\nlet ProfilePostForm = memo((props) => {\n    const cx = classNames.bind(styles);\n    const { handleSubmit, submitting, pristine, photos } = props;\n\n    return (\n        <form className={cx(styles.Block, styles.FieldCreatedPost)} onSubmit={handleSubmit} >\n            <div className={styles.FieldCreatedPostForm} >\n                <div className={styles.FieldCreatedPostAvaBorder} >\n                    <Avatar width=\"38\" height=\"38\" src={photos} borderRadius={true} />\n                </div>\n                <Field type=\"textarea\"\n                    component={Input}\n                    name=\"newPostBody\"\n                    placeholder=\"What`s on your mind?\"\n                    style={{ resize: 'vertical', minHeight: 100 }}\n                    classNameInput={styles.FieldCreatedPostTextarea}\n                    classNameContainer={styles.FieldCreatedPostContainer}\n                />\n            </div>\n            <button type=\"submit\" disabled={pristine || submitting}\n                className={cx(styles.Button, { ButtonValidate: pristine })} >\n        Post\n            </button>\n        </form>\n    );\n});\n\nProfilePostForm.propTypes = {\n    photos: PropTypes.string,\n    pristine: PropTypes.bool.isRequired,\n    submitting: PropTypes.bool.isRequired,\n    handleSubmit: PropTypes.func.isRequired,\n};\n\nProfilePostForm.defaultProps = {\n    photos: '',\n};\n\nProfilePostForm = reduxForm({\n    form: 'profileAddPostForm',\n    validate: (values) => {\n        const errors = {};\n\n        if (values.newPostBody && values.newPostBody.length > 110) {\n            errors.newPostBody = 'Must be 110 characters or less!';\n        }\n\n        return errors;\n    },\n})(ProfilePostForm);\n\nexport default ProfilePostForm;\n","// outsource dependencies\nimport _ from 'lodash';\nimport React, { memo, useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\n// local dependencies\nimport Post from './post';\nimport style from './profilePost.module.scss';\nimport ProfilePostForm from './ProfilePostForm';\nimport { PROFILE } from '../../../constans/types';\nimport { selector } from '../../../redusers/profile-reducer';\n\nconst ProfilePost = memo(() => {\n    // state\n    const profile = useSelector((state) => selector(state).profile);\n    const postData = useSelector((state) => selector(state).postData);\n\n    // dispatch\n    const dispatch = useDispatch();\n    const setLike = useCallback((idPost) => dispatch({ type: PROFILE.SET_LIKE, idPost }), [dispatch]);\n    const removePost = useCallback((idPost) => dispatch({ type: PROFILE.REMOVE_POST, idPost }), [dispatch]);\n    const addPost = useCallback((newPostBody) => dispatch({ type: PROFILE.ADD_POST, newPostBody }), [dispatch]);\n\n\n    const addNewPost = useCallback((post) => {\n        post.newPostBody && addPost(post.newPostBody);\n        post.newPostBody = '';\n    }, [addPost]);\n\n    return (\n        <section className={style.Posts}>\n            <ProfilePostForm onSubmit={addNewPost}\n                photos={profile.photos.small}\n            />\n            <div>\n                <h3 className={style.Posts}>Posts</h3>\n                {\n                    _.map(postData, (post) => (\n                        <Post key={post.id} id={post.id}\n                            date={post.date} removePost={removePost} setLike={setLike}\n                            photos={profile.photos.small} youselfLike={post.youselfLike}\n                            post={post.post} like={post.like} fullName={profile.fullName}\n                        />\n                    ))\n                }\n            </div>\n        </section>\n    );\n});\n\nexport default ProfilePost;\n","export default function (str) {\n    if (!/http/i.test(str)) {\n        return str.replace(str, `http://${str}`);\n    }\n\n    return str;\n}\n","// outsource dependencies\nimport _ from 'lodash';\nimport PropTypes from 'prop-types';\nimport React, { memo } from 'react';\nimport classNames from 'classnames/bind';\nimport { Nav, NavItem, NavLink } from 'reactstrap';\n\n// local dependencies\nimport styles from './profileIntro.module.scss';\nimport replacer from '../../../components/repalcer';\n\nconst ProfileIntro = memo((props) => {\n    const cx = classNames.bind(styles);\n    const { aboutMe, lookingForAJob, lookingForAJobDescription, contacts } = props;\n    const { facebook, website, vk, twitter, instagram, youtube, github, mainLink } = contacts;\n\n    return (\n        <section className={cx(styles.Intro, styles.Block)}>\n            <h3 className={cx(styles.IntroDesc, styles.IntroDescTitle)}>\n                Intro\n            </h3>\n            {\n                aboutMe && <div className={cx(styles.IntroDesc, styles.IntroDescInfo)}>\n                    <b>About me:</b>\n                    <br/>\n                    {aboutMe}\n                </div>\n            }\n            <div className={cx(styles.IntroDesc, styles.IntroDescIsWork)}>\n                <b>\n                    {\n                        lookingForAJob\n                            ? 'I\\'m looking for job'\n                            : 'I\\'m not looking for job now'\n                    }\n                </b>\n            </div>\n            {\n                lookingForAJobDescription && <div className={cx(styles.IntroDesc, styles.IntroDescWork)}>\n                    <b>For a job description:</b>\n                    <br/>\n                    {lookingForAJobDescription}\n                </div>\n            }\n            {\n                _.find(Object.keys(contacts), (link) => contacts[link]) && <div className={styles.IntroDesc}>\n                    <span>My contacts:</span>\n                    <Nav className={cx(styles.contactList)}>\n                        {\n                            github && (\n                                <NavItem title=\"GitHub\" className={cx(styles.contactItem)}>\n                                    <NavLink target=\"_blank\"\n                                        href={replacer(github)}\n                                        className={cx(styles.contactLink)}\n                                    >\n                                        <div className={cx(styles.IntroDescGh)}/>\n                                    </NavLink>\n                                </NavItem>\n                            )\n                        }\n                        {\n                            website && (\n                                <NavItem title=\"Web site\" className={cx(styles.contactItem)}>\n                                    <NavLink target=\"_blank\"\n                                        href={replacer(website)}\n                                        className={cx(styles.contactLink)}\n                                    >\n                                        <div className={cx(styles.IntroDescWeb)}/>\n                                    </NavLink>\n                                </NavItem>\n                            )\n                        }\n                        {\n                            mainLink && (\n                                <NavItem title={mainLink} className={cx(styles.contactItem)}>\n                                    <NavLink target=\"_blank\"\n                                        href={replacer(mainLink)}\n                                        className={cx(styles.contactLink)}\n                                    >\n                                        <div className={cx(styles.IntroDescLink)}/>\n                                    </NavLink>\n                                </NavItem>\n                            )\n                        }\n                        {\n                            facebook && (\n                                <NavItem title=\"Facebook\" className={cx(styles.contactItem)}>\n                                    <NavLink target=\"_blank\"\n                                        href={replacer(facebook)}\n                                        className={cx(styles.contactLink)}\n                                    >\n                                        <div className={cx(styles.IntroDescFb)}/>\n                                    </NavLink>\n                                </NavItem>\n                            )\n                        }\n                        {\n                            vk && (\n                                <NavItem title=\"Vkontakte\" className={cx(styles.contactItem)}>\n                                    <NavLink target=\"_blank\"\n                                        href={replacer(vk)}\n                                        className={cx(styles.contactLink)}\n                                    >\n                                        <div className={cx(styles.IntroDescVk)}/>\n                                    </NavLink>\n                                </NavItem>\n                            )\n                        }\n                        {\n                            instagram && (\n                                <NavItem title=\"Instagram\" className={cx(styles.contactItem)}>\n                                    <NavLink target=\"_blank\"\n                                        href={replacer(instagram)}\n                                        className={cx(styles.contactLink)}\n                                    >\n                                        <div className={cx(styles.IntroDescInst)}/>\n                                    </NavLink>\n                                </NavItem>\n                            )\n                        }\n                        {\n                            twitter && (\n                                <NavItem title=\"Twitter\" className={cx(styles.contactItem)}>\n                                    <NavLink target=\"_blank\"\n                                        href={replacer(twitter)}\n                                        className={cx(styles.contactLink)}\n                                    >\n                                        <div className={cx(styles.IntroDescTw)}/>\n                                    </NavLink>\n                                </NavItem>\n                            )\n                        }\n                        {\n                            youtube && (\n                                <NavItem title=\"Youtobe\" className={cx(styles.contactItem)}>\n                                    <NavLink target=\"_blank\"\n                                        href={replacer(youtube)}\n                                        className={cx(styles.contactLink)}\n                                    >\n                                        <div className={cx(styles.IntroDescYb)}/>\n                                    </NavLink>\n                                </NavItem>\n                            )\n                        }\n                    </Nav>\n                </div>\n            }\n        </section>\n    );\n});\n\nProfileIntro.propTypes = {\n    vk: PropTypes.string,\n    github: PropTypes.string,\n    aboutMe: PropTypes.string,\n    website: PropTypes.string,\n    twitter: PropTypes.string,\n    youtube: PropTypes.string,\n    facebook: PropTypes.string,\n    contacts: PropTypes.object,\n    mainLink: PropTypes.string,\n    instagram: PropTypes.string,\n    lookingForAJob: PropTypes.bool,\n    lookingForAJobDescription: PropTypes.string,\n};\n\nProfileIntro.defaultProps = {\n    vk: '',\n    github: '',\n    aboutMe: '',\n    website: '',\n    twitter: '',\n    youtube: '',\n    facebook: '',\n    contacts: {},\n    mainLink: '',\n    instagram: '',\n    lookingForAJob: false,\n    lookingForAJobDescription: '',\n};\n\nexport default ProfileIntro;\n","// outsource dependencies\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames/bind';\nimport React, { memo, useEffect, useState, useCallback } from 'react';\n\n// local dependencies\nimport Avatar from '../../../components/avatar';\nimport styles from './profileHeader.module.scss';\nimport cover from '../../../images/icon/cover.jpg';\n\n\nconst ProfileHeader = memo((props) => {\n    const cx = classNames.bind(styles);\n    const { profile, isOwner, savePhoto, updateStatus, status } = props;\n\n    const [editMode, setEditMode] = useState(false);\n    const [mouseOver, setMouseOver] = useState(false);\n    const [changedStatus, setChangeStatus] = useState(status);\n\n    useEffect(() => setChangeStatus(status), [status]);\n\n    const activateEditMode = useCallback(() => setEditMode(true), [setEditMode]);\n    const onStatusChange = useCallback((e) => setChangeStatus(e.currentTarget.value), [setChangeStatus]);\n\n    const deactivateEditMode = useCallback(() => {\n        setEditMode(false);\n        updateStatus(changedStatus);\n    }, [setEditMode, updateStatus, changedStatus]);\n\n    const onMainPhotoSelected = useCallback((e) => {\n        const files = e.target.files;\n\n        if (files.length) {\n            savePhoto(files[0]);\n        }\n    }, [savePhoto]);\n\n    return (\n        <section className={cx(styles.Info, styles.Block)}>\n            <div className={styles.InfoTop}>\n                <div className={styles.Cover}>\n                    {\n                        isOwner && <div className={styles.CoverChange}>\n                            <input id=\"changePhoto\" className={styles.CoverChangeInput} type=\"file\"\n                                onChange={onMainPhotoSelected}/>\n                            <label htmlFor=\"changePhoto\" className={styles.CoverChangeLabel}>\n                                change image\n                            </label>\n                        </div>\n                    }\n                    <img alt={profile.fullName} src={profile.photos.large || cover}/>\n                </div>\n                <div className={styles.InfoDesc}>\n                    {\n                        isOwner && <div>\n                            <input id=\"changePhoto\" className={styles.InfoCircleChangeInput} type=\"file\"\n                                onChange={onMainPhotoSelected}/>\n                            <label htmlFor=\"changePhoto\" className={styles.InfoCircleChangeLabel}>\n                                change image\n                            </label>\n                        </div>\n                    }\n                    <div className={styles.InfoCircle}>\n                        <Avatar width=\"158\" height=\"158\" src={profile.photos.small} borderRadius={true}/>\n                    </div>\n                    <div className={styles.Desc}>\n                        <h2 className={styles.DescFullName}>\n                            {profile.fullName}\n                        </h2>\n                        {isOwner\n                            ? (\n                                <div title=\"Edit status\"\n                                    className={cx(styles.DescStatus, { DescStatusWidth: editMode })}\n                                    onMouseEnter={() => setMouseOver(true)}\n                                    onMouseLeave={() => setMouseOver(false)}>\n                                    {\n                                        !editMode && <span onDoubleClick={activateEditMode}>\n                                            {changedStatus || 'no status'}\n                                        </span>\n                                    }\n                                    {\n                                        editMode && <input autoFocus={true}\n                                            value={changedStatus}\n                                            onChange={onStatusChange}\n                                            onBlur={deactivateEditMode}\n                                            className={styles.StatusEditField}/>\n                                    }\n                                    {\n                                        !editMode && mouseOver && <div onClick={activateEditMode}\n                                            className={styles.DescStatusEdit}/>\n                                    }\n                                </div>\n                            )\n                            : (\n                                <div title=\"Edit status\"\n                                    className={cx(styles.DescStatus)}\n                                >\n                                    <span>\n                                        {changedStatus || 'no status'}\n                                    </span>\n                                </div>\n                            )}\n                    </div>\n                </div>\n            </div>\n            <div className={styles.InfoBottom}/>\n        </section>\n    );\n});\n\nProfileHeader.propTypes = {\n    status: PropTypes.string,\n    profile: PropTypes.object,\n    isOwner: PropTypes.bool.isRequired,\n    savePhoto: PropTypes.func.isRequired,\n    updateStatus: PropTypes.func.isRequired,\n};\n\nProfileHeader.defaultProps = {\n    status: '',\n    profile: {},\n};\n\nexport default ProfileHeader;\n","// outsource dependencies\nimport PropTypes from 'prop-types';\nimport React, { memo } from 'react';\nimport classNames from 'classnames/bind';\n\n// local dependencies\nimport ProfilePost from './profilePost';\nimport ProfileIntro from './profileIntro';\nimport styles from './profile.module.scss';\nimport ProfileHeader from './profileHeader';\n\nconst Profile = memo((props) => {\n    const cx = classNames.bind(styles);\n    const { profile } = props;\n\n    return (\n        <main className={cx('container', styles.Main)}>\n            <ProfileHeader {...props} />\n            <div className={styles.Bottom}>\n                <ProfileIntro {...profile} />\n                <ProfilePost />\n            </div>\n        </main>\n    );\n});\n\nProfile.propTypes = {\n    status: PropTypes.string,\n    profile: PropTypes.object,\n    updateStatus: PropTypes.func.isRequired,\n};\n\nProfile.defaultProps = {\n    status: '',\n    profile: {},\n};\n\nexport default Profile;\n","// outsource dependencies\nimport { compose } from 'redux';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport React, { PureComponent } from 'react';\n\n// local dependencies\nimport Profile from './Profile';\nimport { PROFILE } from '../../constans/types';\nimport Preloader from '../../components/preloader/Preloader';\nimport { selector as authSelector } from '../../redusers/auth-reducer';\nimport { selector as profileSelector } from '../../redusers/profile-reducer';\n\n\nclass ProfileContainer extends PureComponent {\n    refreshProfile () {\n        let userId = this.props.match.params.userId;\n\n        if (!userId) {\n            userId = this.props.authorizedUserId;\n        }\n\n        this.props.reviewUser(userId);\n        this.props.getStatus(userId);\n    }\n\n    componentDidMount () {\n        this.refreshProfile();\n    }\n\n    componentDidUpdate (prevProps, prevState) {\n        if (this.props.match.params.userId !== prevProps.match.params.userId) {\n            this.refreshProfile();\n        }\n    }\n\n    render () {\n        const { profile, authorizedUserId } = this.props;\n\n        if (!authorizedUserId) {\n            return <Redirect to=\"/login\" />;\n        }\n\n        if (!profile) {\n            return <Preloader/>;\n        }\n\n        return <Profile {...this.props} isOwner={!this.props.match.params.userId} />;\n    }\n}\n\nProfileContainer.propTypes = {\n    profile: PropTypes.object,\n    authorizedUserId: PropTypes.number,\n    match: PropTypes.object.isRequired,\n    getStatus: PropTypes.func.isRequired,\n    reviewUser: PropTypes.func.isRequired,\n};\n\nProfileContainer.defaultProps = {\n    profile: {},\n    authorizedUserId: false,\n};\n\nexport default compose(\n    connect(\n        // mapStateToProps\n        (state) => ({\n            isAuth: authSelector(state).isAuth,\n            status: profileSelector(state).status,\n            profile: profileSelector(state).profile,\n            authorizedUserId: authSelector(state).userId,\n        }),\n        // mapDispatchToProps\n        (dispatch) => ({\n            savePhoto: (file) => dispatch({ type: PROFILE.SAVE_PHOTO, file }),\n            reviewUser: (userId) => dispatch({ type: PROFILE.USER_ID, userId }),\n            getStatus: (userId) => dispatch({ type: PROFILE.GET_STATUS, userId }),\n            updateStatus: (status) => dispatch({ type: PROFILE.UPDATE_STATUS, status }),\n        }),\n    )\n)(ProfileContainer);\n","// outsource dependencies\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames/bind';\nimport { Field, reduxForm } from 'redux-form';\nimport React, { memo, useCallback } from 'react';\n\n// local dependencies\nimport styles from './setting.module.scss';\nimport { PROFILE } from '../../constans/types';\nimport Input from '../../components/input/index';\nimport { Checkbox } from '../../components/checkbox';\n\n\nconst General = memo((props) => {\n    const cx = classNames.bind(styles);\n    const { handleSubmit, submitting, updateData, userId } = props;\n\n    const onSubmit = useCallback((data) => {\n        updateData(data, userId);\n    }, [updateData, userId]);\n\n    return (\n        <form onSubmit={handleSubmit(onSubmit)}>\n            <fieldset className={cx(styles.formContacts)}>\n                <h3 className={cx('d-md-inline d-none')}>General</h3>\n                <Field type=\"text\"\n                    name=\"fullName\"\n                    label=\"Full name\"\n                    component={Input}\n                    classNameLabel={cx(styles.label)}\n                    classNameInput={cx(styles.input)}\n                    disabled={true}\n                    classNameContainer={cx(styles.fieldContainer)}\n                />\n                <fieldset className={cx(styles.formJob)}>\n                    <Field component={Checkbox}\n                        name=\"lookingForAJob\"\n                        label=\"looking for a job\"\n                        classNameLabel={cx(styles.labelCheckbox)}\n                    />\n                    <Field type=\"textarea\"\n                        component={Input}\n                        label=\"For a job description\"\n                        name=\"lookingForAJobDescription\"\n                        classNameLabel={cx(styles.label)}\n                        classNameInput={cx(styles.input)}\n                        placeholder=\"please enter description\"\n                        classNameContainer={cx(styles.fieldContainer)}\n                    />\n                </fieldset>\n                <Field name=\"aboutMe\"\n                    type=\"textarea\"\n                    label=\"About me\"\n                    component={Input}\n                    classNameLabel={cx(styles.label)}\n                    classNameInput={cx(styles.input)}\n                    placeholder=\"please tell about yourself\"\n                    classNameContainer={cx(styles.fieldContainer)}\n                />\n                <button className={cx('btn', styles.button)}\n                    type=\"submit\" disabled={submitting}>\n                    Update data\n                </button>\n            </fieldset>\n        </form>\n    );\n});\n\nGeneral.propTypes = {\n    userId: PropTypes.number,\n    submitting: PropTypes.bool.isRequired,\n    updateData: PropTypes.func.isRequired,\n    handleSubmit: PropTypes.func.isRequired,\n};\n\nGeneral.defaultProps = {\n    userId: null,\n};\n\nexport default connect(\n    // mapStateToProps\n    (state) => ({\n        userId: state.auth.userId,\n        initialValues: JSON.parse(localStorage.getItem('primeryProfile'))[0],\n    }),\n    // mapDispatchToProps\n    (dispatch) => ({\n        updateData: (data, userId) => dispatch({ type: PROFILE.UPDATE_DATA, data, userId }),\n    }),\n)(reduxForm({\n    form: 'general',\n    enableReinitialize: true,\n    validate: (values) => {\n        const errors = {};\n\n        if (!values.fullName) {\n            errors.fullName = 'Required';\n        } else if (values.fullName.length > 40) {\n            errors.fullName = 'Must be 40 characters or less';\n        }\n\n        if (!values.lookingForAJobDescription) {\n            errors.lookingForAJobDescription = 'Required';\n        }\n\n        if (!values.aboutMe) {\n            errors.aboutMe = 'Required';\n        }\n\n        return errors;\n    },\n})(General));\n","// outsource dependencies\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames/bind';\nimport { Field, reduxForm } from 'redux-form';\nimport React, { memo, useCallback } from 'react';\n\n// local dependencies\nimport styles from './setting.module.scss';\nimport { PROFILE } from '../../constans/types';\nimport Input from '../../components/input/index';\n\n\nconst Contacts = memo((props) => {\n    const cx = classNames.bind(styles);\n    const { handleSubmit, submitting, updateData, userId } = props;\n\n    const onSubmit = useCallback((data) => {\n        updateData(data, userId);\n    }, [updateData, userId]);\n\n    return (\n        <form onSubmit={handleSubmit(onSubmit)}>\n            <fieldset className={cx(styles.formContacts)}>\n                <h3 className={cx('d-md-inline d-none')}>Contacts</h3>\n                <Field type=\"url\"\n                    component={Input}\n                    label=\"My website\"\n                    name=\"website\"\n                    classNameLabel={cx(styles.label)}\n                    classNameInput={cx(styles.input)}\n                    classNameContainer={cx(styles.fieldContainer)}\n                    placeholder=\"please enter your website adress\"\n                />\n                <Field type=\"url\"\n                    component={Input}\n                    label=\"My contact\"\n                    name=\"mainLink\"\n                    classNameLabel={cx(styles.label)}\n                    classNameInput={cx(styles.input)}\n                    classNameContainer={cx(styles.fieldContainer)}\n                    placeholder=\"please enter your contact adress\"\n                />\n                <Field type=\"url\"\n                    component={Input}\n                    label=\"My github account\"\n                    name=\"github\"\n                    classNameLabel={cx(styles.label)}\n                    classNameInput={cx(styles.input)}\n                    classNameContainer={cx(styles.fieldContainer)}\n                    placeholder=\"please enter your github account\"\n                />\n                <Field type=\"url\"\n                    component={Input}\n                    label=\"My facebook account\"\n                    name=\"facebook\"\n                    classNameLabel={cx(styles.label)}\n                    classNameInput={cx(styles.input)}\n                    classNameContainer={cx(styles.fieldContainer)}\n                    placeholder=\"please enter your facebook account\"\n                />\n                <Field type=\"url\"\n                    component={Input}\n                    label=\"My vk account\"\n                    name=\"vk\"\n                    classNameLabel={cx(styles.label)}\n                    classNameInput={cx(styles.input)}\n                    placeholder=\"please enter your vk account\"\n                    classNameContainer={cx(styles.fieldContainer)}\n                />\n                <Field type=\"url\"\n                    component={Input}\n                    label=\"My twitter account\"\n                    name=\"twitter\"\n                    classNameLabel={cx(styles.label)}\n                    classNameInput={cx(styles.input)}\n                    classNameContainer={cx(styles.fieldContainer)}\n                    placeholder=\"please enter your twitter account\"\n                />\n                <Field type=\"url\"\n                    component={Input}\n                    label=\"My instagram account\"\n                    name=\"instagram\"\n                    classNameLabel={cx(styles.label)}\n                    classNameInput={cx(styles.input)}\n                    classNameContainer={cx(styles.fieldContainer)}\n                    placeholder=\"please enter your instagram account\"\n                />\n                <Field type=\"url\"\n                    component={Input}\n                    label=\"My youtube account\"\n                    name=\"youtube\"\n                    classNameLabel={cx(styles.label)}\n                    classNameInput={cx(styles.input)}\n                    classNameContainer={cx(styles.fieldContainer)}\n                    placeholder=\"please enter your youtube account\"\n                />\n            </fieldset>\n            <button className={cx('btn', styles.button)}\n                type=\"submit\" disabled={submitting}>\n                Update data\n            </button>\n        </form>\n    );\n});\n\nContacts.propTypes = {\n    userId: PropTypes.number,\n    submitting: PropTypes.bool.isRequired,\n    updateData: PropTypes.func.isRequired,\n    handleSubmit: PropTypes.func.isRequired,\n};\n\nContacts.defaultProps = {\n    userId: null,\n};\n\nexport default connect(\n    // mapStateToProps\n    (state) => ({\n        userId: state.auth.userId,\n        initialValues: { ...JSON.parse(localStorage.getItem('primeryProfile'))[0].contacts },\n    }),\n    // mapDispatchToProps\n    (dispatch) => ({\n        updateData: (data, userId) => dispatch({ type: PROFILE.UPDATE_DATA, data, userId }),\n    }),\n)(reduxForm({\n    form: 'contacts',\n    enableReinitialize: true,\n})(Contacts));\n","// outsource dependencies\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames/bind';\nimport React, { memo, useCallback } from 'react';\nimport { Nav, NavItem, NavLink } from 'reactstrap';\nimport { Redirect, Route, Switch } from 'react-router-dom';\n\n// local dependencies\nimport General from './General';\nimport Contacts from './Contacts';\nimport Footer from '../../common/footer';\nimport styles from './setting.module.scss';\n\n\nconst Setting = memo((props) => {\n    const { location } = props;\n    const cx = classNames.bind(styles);\n\n    const isActive = useCallback((path) => {\n        return location.pathname === path;\n    }, [location]);\n\n    return (\n        <main className={cx('wrapper', styles.setting)}>\n            <section className={cx('content container', styles.settingWrapper)}>\n                <h1 className={cx('d-md-none d-flex', styles.title)}>Account Settings</h1>\n                <Nav className={cx(styles.navbar)}>\n                    <NavItem className={cx({\n                        navbarActive: isActive('/setting/general'),\n                    })}>\n                        <NavLink className={cx(styles.navbarLink)}\n                            href=\"/setting/general\">\n                            General\n                        </NavLink>\n                    </NavItem>\n                    <NavItem className={cx({\n                        navbarActive: isActive('/setting/contacts'),\n                    })}>\n                        <NavLink className={cx(styles.navbarLink)}\n                            href=\"/setting/contacts\">\n                            Contacts\n                        </NavLink>\n                    </NavItem>\n                </Nav>\n                <div className={cx(styles.settingBlock)}>\n                    <h1 className={cx('d-md-flex d-none', styles.title)}>Account Settings</h1>\n                    <div className={cx(styles.form)}>\n                        <Switch>\n                            <Route path=\"/setting/general\" component={General}/>\n                            <Route path=\"/setting/contacts\" component={Contacts}/>\n                            <Redirect exact from=\"/setting\" to=\"/setting/general\"/>\n                        </Switch>\n                    </div>\n                </div>\n            </section>\n            <Footer/>\n        </main>\n    );\n});\n\nSetting.propTypes = {\n    location: PropTypes.object.isRequired,\n};\n\nexport default Setting;\n","// outsource dependencies\nimport { Redirect } from 'react-router-dom';\nimport React, { PureComponent } from 'react';\n\n// local dependencies\nimport Setting from './Setting';\n\nclass SettingContainer extends PureComponent {\n    render () {\n        if (!localStorage.getItem(\"primeryProfile\")) {\n            return <Redirect to=\"/login\" />;\n        }\n\n        return <Setting {...this.props} />;\n    }\n}\n\nexport default SettingContainer;\n","// outsource dependencies\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames/bind';\nimport { NavItem, NavLink } from 'reactstrap';\nimport React, { memo, useCallback } from 'react';\n\n// local dependencies\nimport styles from './Message.module.scss';\nimport Avatar from '../../components/avatar';\nimport { currentDate } from '../../components/time';\n\n\nconst Dialog = memo((props) => {\n    const cx = classNames.bind(styles);\n    const { messages, href, img, name, id, isMarkRead } = props;\n\n    const todaysDate = useCallback(() => currentDate.getDate(), []);\n    const isRead = useCallback((e) => {\n        e.preventDefault();\n        isMarkRead(e.target.id);\n    }, [isMarkRead]);\n\n    return (\n        <NavItem className={cx(styles.messageItem, {\n            [styles.messageItemUnread]: !messages[messages.length - 1].read,\n        })}>\n            <NavLink className={cx(styles.messageLink)} href={href || '/undefined'}>\n                <div className={cx(styles.messageImg)}>\n                    <Avatar width=\"50\" height=\"50\" borderRadius={true} src={img || null}/>\n                </div>\n                <div className={cx(styles.messageDesc)}>\n                    <div className={cx(styles.messageInfo)}>\n                        <h2 className={cx(styles.messageInfoTitle)}>\n                            {name}\n                        </h2>\n                        <p className={cx(styles.messageInfoText, {\n                            [styles.messageInfoTextReceived]: messages[messages.length - 1].sendMessage,\n                        })}>\n                            {messages[messages.length - 1].message}\n                        </p>\n                    </div>\n                    <div className={cx(styles.messageDate)}>\n                        <p>\n                            {\n                                todaysDate === messages[messages.length - 1].date\n                                    ? messages[messages.length - 1].time\n                                    : messages[messages.length - 1].date\n                            }\n                        </p>\n                        <div id={id}\n                            onClick={isRead}\n                            title={\n                                messages[messages.length - 1].read\n                                    ? 'Mark as Read'\n                                    : 'Mark as Unread'\n                            }\n                            className={cx(styles.messageMark, {\n                                [styles.messageMarkUnread]: !messages[messages.length - 1].read,\n                            })}\n                        />\n                    </div>\n                </div>\n            </NavLink>\n        </NavItem>\n    );\n});\n\nDialog.propTypes = {\n    img: PropTypes.string,\n    href: PropTypes.string,\n    id: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired,\n    messages: PropTypes.array.isRequired,\n    isMarkRead: PropTypes.func.isRequired,\n};\n\nDialog.defaultProps = {\n    img: '',\n    href: '',\n};\n\nexport default Dialog;\n","// outsource dependencies\nimport _ from 'lodash';\nimport PropTypes from 'prop-types';\nimport React, { memo } from 'react';\nimport classNames from 'classnames/bind';\nimport { Nav, NavItem, NavLink } from 'reactstrap';\n\n// local dependencies\nimport Dialog from './Dialog';\nimport styles from './Message.module.scss';\n\n\nconst Message = memo((props) => {\n    const cx = classNames.bind(styles);\n    const { isMarkRead, messages } = props;\n\n    return (\n\n        <main className={cx('container', styles.message)}>\n            <section className={cx('block', styles.messageBlock)}>\n                <div className={cx(styles.elem, styles.elemTop)}>\n                    <Nav className={cx(styles.messageKeyboard)}>\n                        <NavItem className={cx()}>\n                            <NavLink className={cx(styles.messageKeyboardRight)} active href=\"/undefined\">\n                                Recent\n                            </NavLink>\n                        </NavItem>\n                        <NavItem>\n                            <NavLink className={cx(styles.messageKeyboardRight)} href=\"/undefined\">\n                                Message Requests\n                            </NavLink>\n                        </NavItem>\n                    </Nav>\n                    <Nav className={cx(styles.messageKeyboard)}>\n                        <NavItem className={cx()}>\n                            <NavLink className={cx(styles.messageKeyboardLeft)} href=\"/undefined\">\n                                New Group\n                            </NavLink>\n                        </NavItem>\n                        <NavItem className={cx()}>\n                            <NavLink className={cx(styles.messageKeyboardLeft)} href=\"/undefined\">\n                                New Message\n                            </NavLink>\n                        </NavItem>\n                    </Nav>\n                </div>\n                <Nav className={cx(styles.messageList)}>\n                    {_.map(messages, (user) => <Dialog key={user.id} {...user} isMarkRead={isMarkRead}/>)}\n                </Nav>\n            </section>\n        </main>\n    );\n});\n\nMessage.propTypes = {\n    messages: PropTypes.array.isRequired,\n    isMarkRead: PropTypes.func.isRequired,\n};\n\nexport default Message;\n","// outsource dependencies\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport React, { PureComponent } from 'react';\nimport { withRouter } from 'react-router-dom';\n\n// local dependencies\nimport Message from './Message';\nimport { MESSAGE } from '../../constans/types';\nimport { selector as usersSelector } from '../../redusers/users-reducer';\nimport { selector as messageSelector } from '../../redusers/message-reducer';\n\nclass MessageContainer extends PureComponent {\n    // componentDidMount () {\n    //     this.props.setAllUsers()\n    // }\n\n    render () {\n        return <Message {...this.props} />;\n    }\n}\n\nexport default compose(\n    connect(\n        // mapStateToProps\n        (state) => ({\n            messages: messageSelector(state).messages,\n            profile: localStorage.getItem('primeryProfile'),\n            getIsFetching: usersSelector(state).getIsFetching,\n            getFollowedUsers: usersSelector(state).getFollowedUsers,\n        }),\n        // mapDispatchToProps\n        (dispatch) => ({\n            // setAllUsers: () => dispatch({ type: USERS.SET_ALL_USERS }),\n            isMarkRead: (id) => dispatch({ type: MESSAGE.SET_MARK, id }),\n        })\n    ),\n    withRouter,\n)(MessageContainer);\n","// outsource dependencies\nimport { compose } from 'redux';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport React, { PureComponent } from 'react';\nimport { Redirect, Route, Switch, withRouter } from 'react-router-dom';\n\n// local dependencies\nimport './style/_base.scss';\nimport Error from './common/error';\nimport { APP } from './constans/types';\nimport LoginPage from './pages/login/index';\nimport { selector } from './redusers/app-reducer';\nimport Preloader from './components/preloader/Preloader';\nimport UsersContainer from './pages/users/UsersContainer';\nimport HeaderContainer from './common/header/HeaderContainer';\nimport ProfileContainer from './pages/profile/ProfileContainer';\nimport SettingContainer from './pages/setting/SettingContainer';\nimport MessageContainer from './pages/message/MessageContainer';\n\nclass App extends PureComponent {\n    // it will be global error handler\n    catchAllUnhandledErrors = (promiseRejectionEvent) => {\n        console.log(promiseRejectionEvent);\n    };\n\n    componentDidMount () {\n        this.props.initializeApp();\n        window.addEventListener('unhandledrejection', this.catchAllUnhandledErrors);\n    }\n\n    componentWillUnmount () {\n        window.removeEventListener('unhandledrejection', this.catchAllUnhandledErrors);\n    }\n\n    render () {\n        if (!this.props.initialized) {\n            return <Preloader/>;\n        } else if (this.props.location.pathname === '/login') {\n            return <Route path=\"/login\" component={LoginPage}/>;\n        }\n\n        return (\n            <>\n                <HeaderContainer/>\n                <Switch>\n                    <Route path=\"/profile/:userId?\" component={ProfileContainer}/>\n                    <Route path=\"/users\" component={UsersContainer}/>\n                    <Route path=\"/message\" component={MessageContainer}/>\n                    <Route path=\"/setting\" component={SettingContainer}/>\n                    <Redirect exact from=\"/\" to=\"/profile\"/>\n                    <Route path=\"/*\" component={Error}/>\n                </Switch>\n            </>\n        );\n    }\n}\n\nApp.propTypes = {\n    location: PropTypes.object.isRequired,\n    initialized: PropTypes.bool.isRequired,\n    initializeApp: PropTypes.func.isRequired,\n};\n\nexport default compose(\n    connect(\n        // mapStateToProps\n        (state) => ({\n            initialized: selector(state).initialized,\n        }),\n        // mapDispatchToProps\n        (dispatch) => ({\n            initializeApp: () => dispatch({ type: APP.INITIALIZED_APP }),\n        })),\n    withRouter,\n)(App);\n","import * as serviceWorker from './serviceWorker';\nimport store from './redusers/store';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <BrowserRouter>\n            <App/>\n        </BrowserRouter>\n    </Provider>, document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about services workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Block\":\"profilePost_Block__1mC4-\",\"Posts\":\"profilePost_Posts__3HwxG\",\"FieldCreatedPost\":\"profilePost_FieldCreatedPost__3JeH2\",\"FieldCreatedPostForm\":\"profilePost_FieldCreatedPostForm__39XXh\",\"FieldCreatedPostAvaBorder\":\"profilePost_FieldCreatedPostAvaBorder__3PsZf\",\"FieldCreatedPostTextarea\":\"profilePost_FieldCreatedPostTextarea__3FTNT\",\"FieldCreatedPostContainer\":\"profilePost_FieldCreatedPostContainer__3TFqN\",\"Button\":\"profilePost_Button__BWRu_\",\"ButtonValidate\":\"profilePost_ButtonValidate__16PIs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"error_error__1JPhi\",\"errorContainer\":\"error_errorContainer__2HbQW\",\"errorImage\":\"error_errorImage__3GmZx\",\"errorDesc\":\"error_errorDesc__2fGzn\",\"errorItem\":\"error_errorItem__3M8sn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"setting\":\"setting_setting__16WAs\",\"settingWrapper\":\"setting_settingWrapper__3idOr\",\"navbar\":\"setting_navbar__2pp-p\",\"navbarLink\":\"setting_navbarLink___sA4E\",\"navbarActive\":\"setting_navbarActive__2Z3eH\",\"settingBlock\":\"setting_settingBlock__oCLEe\",\"title\":\"setting_title__As8Dg\",\"form\":\"setting_form__31Cjs\",\"label\":\"setting_label__4t2Hs\",\"labelCheckbox\":\"setting_labelCheckbox__1A2PJ\",\"input\":\"setting_input__2En2B\",\"fieldContainer\":\"setting_fieldContainer__sz6A3\",\"formJob\":\"setting_formJob__3mSO5\",\"formContacts\":\"setting_formContacts__NRD7z\",\"button\":\"setting_button__TMRte\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bottomBlock\":\"footer_bottomBlock__359OX\",\"bottomDesc\":\"footer_bottomDesc__2ghA_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"pagination_list__2mhHt\",\"pages\":\"pagination_pages__2bY1X\",\"selectedPage\":\"pagination_selectedPage__2GZ_I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formGroup\":\"checkbox_formGroup__1481Q\",\"defaultLabel\":\"checkbox_defaultLabel__2fIec\",\"defaultInput\":\"checkbox_defaultInput__3CF5x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Main\":\"profile_Main__pe1Ei\",\"Bottom\":\"profile_Bottom__3hQDp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"header_headerContainer__3sC2Q\",\"header\":\"header_header__37f-U\",\"headerAlert\":\"header_headerAlert__1YIzH\",\"headerAlertCollapsed\":\"header_headerAlertCollapsed__1yWlc\",\"logo\":\"header_logo__o8YTp\",\"logoWrapper\":\"header_logoWrapper__3J5oS\",\"logoIcon\":\"header_logoIcon__1JjpX\",\"nav\":\"header_nav__3jPPy\",\"search\":\"header_search__3tplB\",\"searchField\":\"header_searchField__2pL3g\",\"searchButton\":\"header_searchButton__3TnTi\",\"list\":\"header_list__3ufZv\",\"item\":\"header_item__23XxX\",\"link\":\"header_link__3SXps\",\"linkProfile\":\"header_linkProfile__84QGI\",\"linkProfileText\":\"header_linkProfileText__1ICCI\",\"linkHiddenMenu\":\"header_linkHiddenMenu__1OaXP\",\"linkHiddenMenuLast\":\"header_linkHiddenMenuLast__2Lnsu\",\"menu\":\"header_menu__1hd-E\",\"menuActive\":\"header_menuActive__1aexs\",\"hiddenMenu\":\"header_hiddenMenu__1Pe5t\"};"],"sourceRoot":""}